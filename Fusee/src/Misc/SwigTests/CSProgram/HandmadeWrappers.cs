using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Runtime.InteropServices;
using Fusee.Math.Core;

namespace CppApi
{
    
    [StructLayout(LayoutKind.Sequential)]
    unsafe public struct C34M
    {
        public fixed double m[12];
    };
    

    public struct HandmadeWrappers
    {
        // Hand coded wrapper - NOT generated by Swig.
        [DllImport("SwigTests.CppApi.dll", EntryPoint = "HandMadeVectorTaker")]
        public static extern int HandMadeVectorTaker(ref Vector4D vec);


        //public unsafe static int HandMadeMatrixTakerWrapper(ref Matrix4D mtx)
        //{
        //    // pre code
        //    double[] da = Fusee.Math.ArrayConversion.Convert.Matrix4DToArrayDoubleC4DLayout(mtx);
        //    int ret;

        //    // call
        //    fixed (double *p = da)
        //    {
        //        ret = HandMadeMatrixTaker((IntPtr)p);

        //        // post code
        //        mtx = Fusee.Math.ArrayConversion.Convert.ArrayDoubleC4DLayoutToMatrix4D(p);
        //    }

        //    return ret;
        //}

        // Hand coded wrapper - NOT generated by Swig.
        [DllImport("SwigTests.CppApi.dll", EntryPoint = "HandMadeMatrixTaker")]
        public unsafe static extern int HandMadeMatrixTaker(IntPtr mtx);

        // Hand coded wrapper - NOT generated by Swig.
        [DllImport("SwigTests.CppApi.dll", EntryPoint = "HandMadeVectorReturner")]
        public unsafe static extern Vector4D HandMadeVectorReturner();

        // Hand coded wrapper - NOT generated by Swig.
        [DllImport("SwigTests.CppApi.dll", EntryPoint = "HandMadeVectorPtrReturner")]
        public static extern IntPtr HandMadeVectorPtrReturner();

        // Hand coded wrapper - NOT generated by Swig.
        [DllImport("SwigTests.CppApi.dll", EntryPoint = "HandMadeMatrixReturner")]
        public unsafe static extern C34M HandMadeMatrixReturner();


        public unsafe static Matrix4D HandMadeMatrixReturnerWrapper()
        {
            C34M m = HandMadeMatrixReturner();
            // post code
            double *pD = m.m;
            return Fusee.Math.ArrayConversion.Convert.ArrayDoubleC4DLayoutToMatrix4D(pD);
        }

        public static Vector4D HandMadeVectorPtrReturnerWrapper()
        { 
            Vector4D ret;

            unsafe{
                double* pD = (double*)HandMadeVectorPtrReturner();
                ret = new Vector4D(pD[0], pD[1], pD[2], pD[3]);
                /*ret.X = pD[0];
                ret.Y = pD[1];
                ret.Z = pD[2];
                ret.W = pD[3];*/
                //ret = *(Vector4D*)HandMadeVectorPtrReturner();
            }
            return ret;
        }


    }


   

}
