/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace CppApi {

using System;
using System.Runtime.InteropServices;

public class Child : Parent {
  private HandleRef swigCPtr;

  internal Child(IntPtr cPtr, bool cMemoryOwn) : base(CppApiPINVOKE.Child_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Child obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Child() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CppApiPINVOKE.delete_Child(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Child() : this(CppApiPINVOKE.new_Child(), true) {
  }

  public override int WhatAmI() {
    int ret = CppApiPINVOKE.Child_WhatAmI(swigCPtr);
    return ret;
  }

  public int J {
    set {
      CppApiPINVOKE.Child_J_set(swigCPtr, value);
    } 
    get {
      int ret = CppApiPINVOKE.Child_J_get(swigCPtr);
      return ret;
    } 
  }

  public int DoEvenMore() {
    int ret = CppApiPINVOKE.Child_DoEvenMore(swigCPtr);
    return ret;
  }

  public override int DoSomethingElse(int a, int b) {
    int ret = CppApiPINVOKE.Child_DoSomethingElse(swigCPtr, a, b);
    return ret;
  }

}

}
