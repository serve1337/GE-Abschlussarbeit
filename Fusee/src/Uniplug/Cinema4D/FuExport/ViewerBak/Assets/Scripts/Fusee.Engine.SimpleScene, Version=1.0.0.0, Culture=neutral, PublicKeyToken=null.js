/* Generated by JSIL v0.8.2 build 18792. See http://jsil.org/ for more information. */ 
'use strict';
var $asm03 = JSIL.DeclareAssembly("Fusee.Engine.SimpleScene, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Engine");
JSIL.DeclareNamespace("Fusee.Engine.SimpleScene");
/* class Fusee.Engine.SimpleScene.ContainerExtensions */ 

(function ContainerExtensions$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Serialization.SceneComponentContainer)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm06.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.System.Type)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.Fusee.Serialization.LightComponent)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.Serialization.MeshComponent)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.Fusee.Serialization.TransformComponent)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.Fusee.Serialization.WeightComponent)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Boolean"), [$asm09.TypeRef("System.Type")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4x4"), [$asm05.TypeRef("Fusee.Math.float4x4"), $asm05.TypeRef("Fusee.Math.float4x4")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4x4"), [$asm05.TypeRef("Fusee.Math.float3")]))) ();
  };


  function ContainerExtensions_AddComponent (sncThis, scc) {
    var flag = (scc === null) || 
    (sncThis === null);
    if (!flag) {
      var flag2 = sncThis.Components === null;
      if (flag2) {
        sncThis.Components = $S00().Construct();
      }
      $S01().CallVirtual("Add", null, sncThis.Components, scc);
    }
  }; 

  function ContainerExtensions_GetComponent (sncThis, type, inx) {
    var $temp00;
    var flag = (sncThis === null) || 
    (sncThis.Components === null) || 
    $T04().op_Equality(type, null);
    if (flag) {
      var result = null;
    } else {

      for (var a$0 = sncThis.Components._items, i$0 = 0, l$0 = (sncThis.Components._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        var num = 0;
        var flag2 = $S02().CallVirtual("IsAssignableFrom", null, JSIL.GetType(current), type);
        if (flag2) {
          var flag3 = num === (inx | 0);
          if (flag3) {
            result = current;
            return result;
          }
          var num2 = num;
          num = ((num2 + 1) | 0);
        }
      }
      result = null;
    }
    return result;
  }; 

  function ContainerExtensions_GetComponent$b1 (TComp, sncThis, inx) {
    return $thisType.GetComponent(sncThis, TComp, inx);
  }; 

  function ContainerExtensions_GetLight (sncThis, inx) {
    return $T06().$Cast($thisType.GetComponent$b1($T06())(sncThis, inx));
  }; 

  function ContainerExtensions_GetMaterial (sncThis, inx) {
    return $T07().$Cast($thisType.GetComponent$b1($T07())(sncThis, inx));
  }; 

  function ContainerExtensions_GetMesh (sncThis, inx) {
    return $T08().$Cast($thisType.GetComponent$b1($T08())(sncThis, inx));
  }; 

  function ContainerExtensions_GetTransform (snc, inx) {
    return $T09().$Cast($thisType.GetComponent$b1($T09())(snc, inx));
  }; 

  function ContainerExtensions_GetWeights (snc, inx) {
    return $T0A().$Cast($thisType.GetComponent$b1($T0A())(snc, inx));
  }; 

  function ContainerExtensions_Matrix (tcThis) {
    return $S03().CallStatic($T0B(), "op_Multiply", null, 
      $S03().CallStatic($T0B(), "op_Multiply", null, 
        $S03().CallStatic($T0B(), "op_Multiply", null, 
          $S03().CallStatic($T0B(), "op_Multiply", null, 
            $T0B().CreateTranslation(tcThis.Translation.MemberwiseClone()).MemberwiseClone(), 
            $T0B().CreateRotationY(tcThis.Rotation.y).MemberwiseClone()
          ).MemberwiseClone(), 
          $T0B().CreateRotationX(tcThis.Rotation.x).MemberwiseClone()
        ).MemberwiseClone(), 
        $T0B().CreateRotationZ(tcThis.Rotation.z).MemberwiseClone()
      ).MemberwiseClone(), 
      $S04().CallStatic($T0B(), "CreateScale", null, tcThis.Scale.MemberwiseClone()).MemberwiseClone()
    );
  }; 

  JSIL.MakeStaticClass("Fusee.Engine.SimpleScene.ContainerExtensions", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "AddComponent", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]), 
      ContainerExtensions_AddComponent
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetComponent", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Serialization.SceneComponentContainer"), [
          $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Type"), 
          $.Int32
        ]), 
      ContainerExtensions_GetComponent
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetComponent", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Serialization.SceneComponentContainer"), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $.Int32], ["TComp"]), 
      ContainerExtensions_GetComponent$b1
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetLight", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Serialization.LightComponent"), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $.Int32]), 
      ContainerExtensions_GetLight
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetMaterial", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Serialization.MaterialComponent"), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $.Int32]), 
      ContainerExtensions_GetMaterial
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetMesh", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Serialization.MeshComponent"), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $.Int32]), 
      ContainerExtensions_GetMesh
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetTransform", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Serialization.TransformComponent"), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $.Int32]), 
      ContainerExtensions_GetTransform
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "GetWeights", 
      new JSIL.MethodSignature($asm06.TypeRef("Fusee.Serialization.WeightComponent"), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $.Int32]), 
      ContainerExtensions_GetWeights
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Matrix", 
      new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4x4"), [$asm06.TypeRef("Fusee.Serialization.TransformComponent")]), 
      ContainerExtensions_Matrix
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class Fusee.Engine.SimpleScene.SceneFinderExtensions */ 

(function SceneFinderExtensions$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Predicate$b1.Of($asm06.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneComponentEnumerable$b1.Of($asm06.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.System.Type)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.System.Predicate$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeWhereComponentEnumerable$b2.Of($asm06.Fusee.Serialization.SceneNodeContainer, $asm06.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer).GetEnumerator)) ();
  };


  function SceneFinderExtensions_FindComponents$00 (root, match) {
    var sceneComponentEnumerable = new ($T02())();
    sceneComponentEnumerable._match = match;
    sceneComponentEnumerable._rootList = $T03().SingleRootEnum(root);
    return sceneComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindComponents$b1$01 (TComponent, root, match) {
    var sceneComponentEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneComponentEnumerable$b1.Of(TComponent)) ();
    sceneComponentEnumerable._match = match;
    sceneComponentEnumerable._rootList = $T03().SingleRootEnum(root);
    return sceneComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindComponents$02 (rootList, match) {
    var sceneComponentEnumerable = new ($T02())();
    sceneComponentEnumerable._match = match;
    sceneComponentEnumerable._rootList = $IM00().Call(rootList, null);
    return sceneComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindComponents$b1$03 (TComponent, rootList, match) {
    var sceneComponentEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneComponentEnumerable$b1.Of(TComponent)) ();
    sceneComponentEnumerable._match = match;
    sceneComponentEnumerable._rootList = $IM00().Call(rootList, null);
    return sceneComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindNodes$04 (root, match) {
    var sceneNodeEnumerable = new ($T07())();
    sceneNodeEnumerable._match = match;
    sceneNodeEnumerable._rootList = $T03().SingleRootEnum(root);
    return sceneNodeEnumerable;
  }; 

  function SceneFinderExtensions_FindNodes$b1$05 (TNode, root, match) {
    var sceneNodeEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeEnumerable$b1.Of(TNode)) ();
    sceneNodeEnumerable._match = match;
    sceneNodeEnumerable._rootList = $T03().SingleRootEnum(root);
    return sceneNodeEnumerable;
  }; 

  function SceneFinderExtensions_FindNodes$06 (rootList, match) {
    var sceneNodeEnumerable = new ($T07())();
    sceneNodeEnumerable._match = match;
    sceneNodeEnumerable._rootList = $IM00().Call(rootList, null);
    return sceneNodeEnumerable;
  }; 

  function SceneFinderExtensions_FindNodes$b1$07 (TNode, rootList, match) {
    var sceneNodeEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeEnumerable$b1.Of(TNode)) ();
    sceneNodeEnumerable._match = match;
    sceneNodeEnumerable._rootList = $IM00().Call(rootList, null);
    return sceneNodeEnumerable;
  }; 

  function SceneFinderExtensions_FindNodesWhereComponent$08 (root, match) {
    var sceneNodeWhereComponentEnumerable = new ($T08())();
    sceneNodeWhereComponentEnumerable._match = match;
    sceneNodeWhereComponentEnumerable._rootList = $T03().SingleRootEnum(root);
    return sceneNodeWhereComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindNodesWhereComponent$b1$09 (TComponent, root, match) {
    var sceneNodeWhereComponentEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeWhereComponentEnumerable$b2.Of($asm06.Fusee.Serialization.SceneNodeContainer, TComponent)) ();
    sceneNodeWhereComponentEnumerable._match = match;
    sceneNodeWhereComponentEnumerable._rootList = $T03().SingleRootEnum(root);
    return sceneNodeWhereComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindNodesWhereComponent$b2$0A (TNode, TComponent, root, match) {
    var sceneNodeWhereComponentEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeWhereComponentEnumerable$b2.Of(TNode, TComponent)) ();
    sceneNodeWhereComponentEnumerable._match = match;
    sceneNodeWhereComponentEnumerable._rootList = $T03().SingleRootEnum(root);
    return sceneNodeWhereComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindNodesWhereComponent$0B (rootList, match) {
    var sceneNodeWhereComponentEnumerable = new ($T08())();
    sceneNodeWhereComponentEnumerable._match = match;
    sceneNodeWhereComponentEnumerable._rootList = $IM00().Call(rootList, null);
    return sceneNodeWhereComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindNodesWhereComponent$b1$0C (TComponent, rootList, match) {
    var sceneNodeWhereComponentEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeWhereComponentEnumerable$b2.Of($asm06.Fusee.Serialization.SceneNodeContainer, TComponent)) ();
    sceneNodeWhereComponentEnumerable._match = match;
    sceneNodeWhereComponentEnumerable._rootList = $IM00().Call(rootList, null);
    return sceneNodeWhereComponentEnumerable;
  }; 

  function SceneFinderExtensions_FindNodesWhereComponent$b2$0D (TNode, TComponent, rootList, match) {
    var sceneNodeWhereComponentEnumerable = new ($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions_SceneNodeWhereComponentEnumerable$b2.Of(TNode, TComponent)) ();
    sceneNodeWhereComponentEnumerable._match = match;
    sceneNodeWhereComponentEnumerable._rootList = $IM00().Call(rootList, null);
    return sceneNodeWhereComponentEnumerable;
  }; 

  JSIL.MakeStaticClass("Fusee.Engine.SimpleScene.SceneFinderExtensions", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "FindComponents", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Predicate`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")])]), 
      SceneFinderExtensions_FindComponents$00
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindComponents", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Predicate`1", ["!!0"])], ["TComponent"]), 
      SceneFinderExtensions_FindComponents$b1$01
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindComponents", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")])]), 
      SceneFinderExtensions_FindComponents$02
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindComponents", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", ["!!0"])], ["TComponent"]), 
      SceneFinderExtensions_FindComponents$b1$03
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Predicate`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])]), 
      SceneFinderExtensions_FindNodes$04
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Predicate`1", ["!!0"])], ["TNode"]), 
      SceneFinderExtensions_FindNodes$b1$05
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])]), 
      SceneFinderExtensions_FindNodes$06
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodes", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", ["!!0"])], ["TNode"]), 
      SceneFinderExtensions_FindNodes$b1$07
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodesWhereComponent", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Predicate`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")])]), 
      SceneFinderExtensions_FindNodesWhereComponent$08
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodesWhereComponent", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Predicate`1", ["!!0"])], ["TComponent"]), 
      SceneFinderExtensions_FindNodesWhereComponent$b1$09
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodesWhereComponent", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm09.TypeRef("System.Predicate`1", ["!!1"])], ["TNode", "TComponent"]), 
      SceneFinderExtensions_FindNodesWhereComponent$b2$0A
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodesWhereComponent", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")])]), 
      SceneFinderExtensions_FindNodesWhereComponent$0B
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodesWhereComponent", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", ["!!0"])], ["TComponent"]), 
      SceneFinderExtensions_FindNodesWhereComponent$b1$0C
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "FindNodesWhereComponent", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", ["!!1"])], ["TNode", "TComponent"]), 
      SceneFinderExtensions_FindNodesWhereComponent$b2$0D
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class Fusee.Engine.SimpleScene.SceneFinderExtensions+SceneNodeEnumerable`1 */ 

(function SceneNodeEnumerable$b1$Members () {
  var $, $thisType;

  function SceneNodeEnumerable$b1__ctor () {
  }; 

  function SceneNodeEnumerable$b1_GetEnumerator () {
    return new ($asm03.Fusee.Engine.SimpleScene.SceneNodeFinder$b1.Of($thisType.TNode.get(this))) (this._rootList, this._match);
  }; 

  function SceneNodeEnumerable$b1_System_Collections_IEnumerable_GetEnumerator () {
    return this.GetEnumerator();
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneFinderExtensions+SceneNodeEnumerable`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TNode"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneNodeEnumerable$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TNode")]), null), 
      SceneNodeEnumerable$b1_GetEnumerator
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm09.TypeRef("System.Collections.IEnumerator")), 
      SceneNodeEnumerable$b1_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "_match", $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TNode")]));

    $.Field({Static:false, Public:false}, "_rootList", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneFinderExtensions+SceneComponentEnumerable`1 */ 

(function SceneComponentEnumerable$b1$Members () {
  var $, $thisType;

  function SceneComponentEnumerable$b1__ctor () {
  }; 

  function SceneComponentEnumerable$b1_GetEnumerator () {
    return new ($asm03.Fusee.Engine.SimpleScene.SceneComponentFinder$b1.Of($thisType.TComponent.get(this))) (this._rootList, this._match);
  }; 

  function SceneComponentEnumerable$b1_System_Collections_IEnumerable_GetEnumerator () {
    return this.GetEnumerator();
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneFinderExtensions+SceneComponentEnumerable`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TComponent"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneComponentEnumerable$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TComponent")]), null), 
      SceneComponentEnumerable$b1_GetEnumerator
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm09.TypeRef("System.Collections.IEnumerator")), 
      SceneComponentEnumerable$b1_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "_match", $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TComponent")]));

    $.Field({Static:false, Public:false}, "_rootList", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TComponent")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneFinderExtensions+SceneNodeWhereComponentEnumerable`2 */ 

(function SceneNodeWhereComponentEnumerable$b2$Members () {
  var $, $thisType;

  function SceneNodeWhereComponentEnumerable$b2__ctor () {
  }; 

  function SceneNodeWhereComponentEnumerable$b2_GetEnumerator () {
    return new ($asm03.Fusee.Engine.SimpleScene.SceneNodeWhereComponentFinder$b2.Of($thisType.TNode.get(this), $thisType.TComponent.get(this))) (this._rootList, this._match);
  }; 

  function SceneNodeWhereComponentEnumerable$b2_System_Collections_IEnumerable_GetEnumerator () {
    return this.GetEnumerator();
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneFinderExtensions+SceneNodeWhereComponentEnumerable`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TNode", "TComponent"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneNodeWhereComponentEnumerable$b2__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TNode")]), null), 
      SceneNodeWhereComponentEnumerable$b2_GetEnumerator
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm09.TypeRef("System.Collections.IEnumerator")), 
      SceneNodeWhereComponentEnumerable$b2_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "_match", $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TComponent")]));

    $.Field({Static:false, Public:false}, "_rootList", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TNode")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneVisitor */ 

(function SceneVisitor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.Fusee.Serialization.SceneComponentContainer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_VisitComponentMethod)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm09.System.Type, $asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_VisitComponentMethod))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_VisitNodeMethod)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm09.System.Type, $asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_VisitNodeMethod))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.System.Collections.Generic.Stack$b1.Of($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer)))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm09.System.Collections.IEnumerator)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm09.System.Collections.Generic.List$b1_Enumerator.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm06.Fusee.Serialization.SceneComponentContainer))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm09.System.Reflection.MethodInfo)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize(System.Array.Of($asm09.System.Object))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.System.Reflection.MemberInfo)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitMethodAttribute)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm09.System.Type, $asm03.Fusee.Engine.SimpleScene.SceneVisitor_VisitorSet))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor_VisitorSet)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize(System.Array.Of($asm09.System.Reflection.MethodInfo))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm09.System.Type)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm09.System.Reflection.BindingFlags)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize(System.Array.Of($asm09.System.Reflection.ParameterInfo))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm09.System.Reflection.MethodBase)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm09.System.Reflection.ParameterInfo)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitorCallerFactory)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm09.System.IDisposable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0B.TypeRef("System.Collections.Generic.Stack`1", [$asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("System.Type"), $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor+VisitorSet")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Boolean"), [$asm09.TypeRef("System.Type")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm09.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneComponentContainer).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer).GetEnumerator)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm09.System.IDisposable.Dispose)) ();
  };


  function SceneVisitor__ctor () {
  }; 

  function SceneVisitor_DoTraverse (node) {
    var $temp00;
    this.SceneVisitor$CurrentNode$value = node;
    this.PushState();
    this.DoVisitNode(node);
    this.DoVisitComponents(node);
    var flag = node.Children !== null;
    if (flag) {

      for (var a$0 = node.Children._items, i$0 = 0, l$0 = (node.Children._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        this.DoTraverse(current);
      }
    }
    this.PopState();
    this.SceneVisitor$CurrentNode$value = null;
  }; 

  function SceneVisitor_DoTraverseNoComponents (node) {
    var $temp00;
    this.SceneVisitor$CurrentNode$value = node;
    this.PushState();
    this.DoVisitNode(node);
    var flag = node.Children !== null;
    if (flag) {

      for (var a$0 = node.Children._items, i$0 = 0, l$0 = (node.Children._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        this.DoTraverseNoComponents(current);
      }
    }
    this.PopState();
    this.SceneVisitor$CurrentNode$value = null;
  }; 

  function SceneVisitor_DoVisitComponent (component) {
    var visitComponentMethod = new JSIL.BoxedVariable(null);
    var flag = (this._visitors.Components).TryGetValue(JSIL.GetType(component), /* ref */ visitComponentMethod);
    if (flag) {
      visitComponentMethod.get()(this, component);
    }
  }; 

  function SceneVisitor_DoVisitComponents (node) {
    var $temp00;
    var flag = node.Components === null;
    if (!flag) {

      for (var a$0 = node.Components._items, i$0 = 0, l$0 = (node.Components._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        this.SceneVisitor$CurrentComponent$value = current;
        this.DoVisitComponent(current);
        this.SceneVisitor$CurrentComponent$value = null;
      }
    }
  }; 

  function SceneVisitor_DoVisitNode (node) {
    var visitNodeMethod = new JSIL.BoxedVariable(null);
    var flag = (this._visitors.Nodes).TryGetValue(JSIL.GetType(node), /* ref */ visitNodeMethod);
    if (flag) {
      visitNodeMethod.get()(this, node);
    }
  }; 

  function SceneVisitor_EnumInit (nodes) {
    if (nodes !== null) {
      this.ScanForVisitors();
      this.SceneVisitor$YieldOnCurrentNode$value = false;
      this.SceneVisitor$YieldOnCurrentComponent$value = false;
      if (this._nodeEnumeratorStack === null) {
        this._nodeEnumeratorStack = $S00().Construct();
      }
      $T09().prototype.Clear.call(this._nodeEnumeratorStack);
      this.InitState();
      this._curNodeEnumerator = nodes;
    }
  }; 

  function SceneVisitor_EnumMoveNext () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          this.SceneVisitor$YieldOnCurrentNode$value = false;
          this.SceneVisitor$YieldOnCurrentComponent$value = false;

        $loop0: 
          while (true) {
            if (this._curCompEnumerator !== null) {
              var flag2 = !$IM00().Call(this._curCompEnumerator, null);
              if (flag2) {
                this._curCompEnumerator = null;
                this.SceneVisitor$CurrentComponent$value = null;
              } else {
                this.SceneVisitor$CurrentComponent$value = $IM01().Call(this._curCompEnumerator, null);
                this.DoVisitComponent(this.SceneVisitor$CurrentComponent$value);
                var yieldEnumeration = this.get_YieldEnumeration();
                if (yieldEnumeration) {
                  break $loop0;
                }
              }
            } else {

              while (!$IM00().Call(this._curNodeEnumerator, null)) {
                var flag3 = ((this._nodeEnumeratorStack).get_Count() | 0) > 0;
                if (!flag3) {
                  $label0 = 1 /* goto IL_B6 */ ;
                  continue $labelgroup0;
                }
                this._curNodeEnumerator = $T09().prototype.Pop.call(this._nodeEnumeratorStack);
                this.PopState();
              }
              this.SceneVisitor$CurrentNode$value = $IM02().Call(this._curNodeEnumerator, null);
              var flag4 = this.SceneVisitor$CurrentNode$value.Children !== null;
              if (flag4) {
                this.PushState();
                var enumerator = $T0D().prototype.GetEnumerator.call(this.SceneVisitor$CurrentNode$value.Children);
                $T09().prototype.Push.call(this._nodeEnumeratorStack, this._curNodeEnumerator);
                this._curNodeEnumerator = enumerator.MemberwiseClone();
              }
              var flag5 = this.SceneVisitor$CurrentNode$value.Components !== null;
              if (flag5) {
                this._curCompEnumerator = $T0E().prototype.GetEnumerator.call(this.SceneVisitor$CurrentNode$value.Components).MemberwiseClone();
              }
              this.DoVisitNode(this.SceneVisitor$CurrentNode$value);
              var yieldOnCurrentNode = this.SceneVisitor$YieldOnCurrentNode$value;
              if (yieldOnCurrentNode) {
                $label0 = 2 /* goto Block_8 */ ;
                continue $labelgroup0;
              }
            }
          }
          var result = true;
          return result;

          $label0 = 1 /* goto IL_B6 */ ;
          continue $labelgroup0;
        case 1: /* IL_B6 */ 
          $T09().prototype.Clear.call(this._nodeEnumeratorStack);
          this._nodeEnumeratorStack = null;
          this._curCompEnumerator = null;
          this._curNodeEnumerator = null;
          this.SceneVisitor$CurrentNode$value = null;
          this.SceneVisitor$CurrentComponent$value = null;
          result = false;
          return result;

          $label0 = 2 /* goto Block_8 */ ;
          continue $labelgroup0;
        case 2: /* Block_8 */ 
          result = true;
          return result;

          break $labelgroup0;
      }
    }
  }; 

  function SceneVisitor_EnumMoveNextNoComponent () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          this.SceneVisitor$YieldOnCurrentNode$value = false;
          this.SceneVisitor$YieldOnCurrentComponent$value = false;

          while (true) {

            while (!$IM00().Call(this._curNodeEnumerator, null)) {
              var flag = ((this._nodeEnumeratorStack).get_Count() | 0) > 0;
              if (!flag) {
                $label0 = 1 /* goto IL_48 */ ;
                continue $labelgroup0;
              }
              this._curNodeEnumerator = $T09().prototype.Pop.call(this._nodeEnumeratorStack);
              this.PopState();
            }
            this.SceneVisitor$CurrentNode$value = $IM02().Call(this._curNodeEnumerator, null);
            var flag2 = this.SceneVisitor$CurrentNode$value.Children !== null;
            if (flag2) {
              this.PushState();
              var enumerator = $T0D().prototype.GetEnumerator.call(this.SceneVisitor$CurrentNode$value.Children);
              $T09().prototype.Push.call(this._nodeEnumeratorStack, this._curNodeEnumerator);
              this._curNodeEnumerator = enumerator.MemberwiseClone();
            }
            this.DoVisitNode(this.SceneVisitor$CurrentNode$value);
            var yieldOnCurrentNode = this.SceneVisitor$YieldOnCurrentNode$value;
            if (yieldOnCurrentNode) {
              $label0 = 2 /* goto Block_4 */ ;
              continue $labelgroup0;
            }
          }

          $label0 = 1 /* goto IL_48 */ ;
          continue $labelgroup0;
        case 1: /* IL_48 */ 
          $T09().prototype.Clear.call(this._nodeEnumeratorStack);
          this._nodeEnumeratorStack = null;
          this._curCompEnumerator = null;
          this._curNodeEnumerator = null;
          this.SceneVisitor$CurrentNode$value = null;
          this.SceneVisitor$CurrentComponent$value = null;
          var result = false;
          return result;

          $label0 = 2 /* goto Block_4 */ ;
          continue $labelgroup0;
        case 2: /* Block_4 */ 
          result = true;
          return result;

          break $labelgroup0;
      }
    }
  }; 

  function SceneVisitor_get_CurrentComponent () {
    return this.SceneVisitor$CurrentComponent$value;
  }; 

  function SceneVisitor_get_CurrentNode () {
    return this.SceneVisitor$CurrentNode$value;
  }; 

  function SceneVisitor_get_YieldEnumeration () {
    return (this.SceneVisitor$YieldOnCurrentComponent$value || this.SceneVisitor$YieldOnCurrentNode$value);
  }; 

  function SceneVisitor_get_YieldOnCurrentComponent () {
    return this.SceneVisitor$YieldOnCurrentComponent$value;
  }; 

  function SceneVisitor_get_YieldOnCurrentNode () {
    return this.SceneVisitor$YieldOnCurrentNode$value;
  }; 

  function SceneVisitor_InitState () {
  }; 

  function SceneVisitor_IsVisitor (methodInfo) {
    var customAttributes = methodInfo.GetCustomAttributes($T12().__Type__, false);
    return ((customAttributes !== null) && ((customAttributes.length | 0) > 0));
  }; 

  function SceneVisitor_PopState () {
  }; 

  function SceneVisitor_PushState () {
  }; 

  function SceneVisitor_ScanForVisitors () {
    if (this._visitors === null) {
      if ($thisType._visitorMap === null) {
        $thisType._visitorMap = $S01().Construct();
      }
      var flag3 = $thisType._visitorMap.TryGetValue(JSIL.GetType(this), /* ref */ new JSIL.MemberReference(this, "_visitors"));
      if (!flag3) {
        this._visitors = new ($T14())();
        var methods = (JSIL.GetType(this)).GetMethods($T17().$Flags("Instance", "NonPublic", "Public"));

        for (var i = 0; i < (methods.length | 0); i = ((i + 1) | 0)) {
          var methodInfo = methods[i];
          var flag4 = !$thisType.IsVisitor(methodInfo);
          if (!flag4) {
            var parameters = methodInfo.GetParameters();
            var flag5 = (parameters.length | 0) !== 1;
            if (!flag5) {
              var parameterType = (parameters[0]).get_ParameterType();
              var flag6 = $S02().CallVirtual("IsAssignableFrom", null, $T03().__Type__, parameterType);
              if (flag6) {
                (this._visitors.Components).set_Item(parameterType, $T1B().MakeComponentVisitor(methodInfo));
              } else {
                var flag7 = $S02().CallVirtual("IsAssignableFrom", null, $T00().__Type__, parameterType);
                if (flag7) {
                  (this._visitors.Nodes).set_Item(parameterType, $T1B().MakeNodeVistor(methodInfo));
                }
              }
            }
          }
        }
        $thisType._visitorMap.Add(JSIL.GetType(this), this._visitors);
      }
    }
  }; 

  function SceneVisitor_set_CurrentComponent (value) {
    this.SceneVisitor$CurrentComponent$value = value;
  }; 

  function SceneVisitor_set_CurrentNode (value) {
    this.SceneVisitor$CurrentNode$value = value;
  }; 

  function SceneVisitor_set_YieldOnCurrentComponent (value) {
    this.SceneVisitor$YieldOnCurrentComponent$value = value;
  }; 

  function SceneVisitor_set_YieldOnCurrentNode (value) {
    this.SceneVisitor$YieldOnCurrentNode$value = value;
  }; 

  function SceneVisitor_Traverse$00 (rootNode) {
    var flag = rootNode === null;
    if (!flag) {
      this.ScanForVisitors();
      this.InitState();
      var flag2 = ((this._visitors.Components).get_Count() | 0) > 0;
      if (flag2) {
        this.DoTraverse(rootNode);
      } else {
        this.DoTraverseNoComponents(rootNode);
      }
    }
  }; 

  function SceneVisitor_Traverse$01 (children) {
    var flag = children === null;
    if (!flag) {
      this.ScanForVisitors();
      this.InitState();
      var flag2 = ((this._visitors.Components).get_Count() | 0) > 0;
      if (flag2) {
        var enumerator = $IM03().Call(children, null);
        try {

          while ($IM00().Call(enumerator, null)) {
            var current = $IM02().Call(enumerator, null);
            this.DoTraverse(current);
          }
        } finally {
          if (enumerator !== null) {
            $IM04().Call(enumerator, null);
          }
        }
      } else {
        var enumerator2 = $IM03().Call(children, null);
        try {

          while ($IM00().Call(enumerator2, null)) {
            var current2 = $IM02().Call(enumerator2, null);
            this.DoTraverseNoComponents(current2);
          }
        } finally {
          if (enumerator2 !== null) {
            $IM04().Call(enumerator2, null);
          }
        }
      }
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneVisitor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneVisitor__ctor
    );

    $.Method({Static:false, Public:false}, "DoTraverse", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      SceneVisitor_DoTraverse
    );

    $.Method({Static:false, Public:false}, "DoTraverseNoComponents", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      SceneVisitor_DoTraverseNoComponents
    );

    $.Method({Static:false, Public:false}, "DoVisitComponent", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")), 
      SceneVisitor_DoVisitComponent
    );

    $.Method({Static:false, Public:false}, "DoVisitComponents", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      SceneVisitor_DoVisitComponents
    );

    $.Method({Static:false, Public:false}, "DoVisitNode", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      SceneVisitor_DoVisitNode
    );

    $.Method({Static:false, Public:false}, "EnumInit", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      SceneVisitor_EnumInit
    );

    $.Method({Static:false, Public:false}, "EnumMoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneVisitor_EnumMoveNext
    );

    $.Method({Static:false, Public:false}, "EnumMoveNextNoComponent", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneVisitor_EnumMoveNextNoComponent
    );

    $.Method({Static:false, Public:false}, "get_CurrentComponent", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")), 
      SceneVisitor_get_CurrentComponent
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_CurrentNode", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      SceneVisitor_get_CurrentNode
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_YieldEnumeration", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneVisitor_get_YieldEnumeration
    );

    $.Method({Static:false, Public:false}, "get_YieldOnCurrentComponent", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneVisitor_get_YieldOnCurrentComponent
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_YieldOnCurrentNode", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneVisitor_get_YieldOnCurrentNode
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      SceneVisitor_InitState
    );

    $.Method({Static:true , Public:false}, "IsVisitor", 
      new JSIL.MethodSignature($.Boolean, [$asm09.TypeRef("System.Reflection.MethodInfo")]), 
      SceneVisitor_IsVisitor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      SceneVisitor_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      SceneVisitor_PushState
    );

    $.Method({Static:false, Public:false}, "ScanForVisitors", 
      JSIL.MethodSignature.Void, 
      SceneVisitor_ScanForVisitors
    );

    $.Method({Static:false, Public:false}, "set_CurrentComponent", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")), 
      SceneVisitor_set_CurrentComponent
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_CurrentNode", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      SceneVisitor_set_CurrentNode
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_YieldOnCurrentComponent", 
      JSIL.MethodSignature.Action($.Boolean), 
      SceneVisitor_set_YieldOnCurrentComponent
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_YieldOnCurrentNode", 
      JSIL.MethodSignature.Action($.Boolean), 
      SceneVisitor_set_YieldOnCurrentNode
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Traverse", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      SceneVisitor_Traverse$00
    );

    $.Method({Static:false, Public:true }, "Traverse", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      SceneVisitor_Traverse$01
    );

    $.Field({Static:false, Public:false}, "_visitors", $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor+VisitorSet"));

    $.Field({Static:true , Public:false}, "_visitorMap", $asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("System.Type"), $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor+VisitorSet")]));

    $.Field({Static:false, Public:false}, "SceneVisitor$CurrentNode$value", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"))
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm09.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Field({Static:false, Public:false}, "SceneVisitor$CurrentComponent$value", $asm06.TypeRef("Fusee.Serialization.SceneComponentContainer"))
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm09.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Field({Static:false, Public:false}, "SceneVisitor$YieldOnCurrentNode$value", $.Boolean)
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm09.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Field({Static:false, Public:false}, "SceneVisitor$YieldOnCurrentComponent$value", $.Boolean)
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm09.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Field({Static:false, Public:false}, "_nodeEnumeratorStack", $asm0B.TypeRef("System.Collections.Generic.Stack`1", [$asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])]));

    $.Field({Static:false, Public:false}, "_curNodeEnumerator", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:false}, "_curCompEnumerator", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]));

    $.Property({Static:false, Public:false}, "CurrentNode", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Property({Static:false, Public:false}, "CurrentComponent", $asm06.TypeRef("Fusee.Serialization.SceneComponentContainer"));

    $.Property({Static:false, Public:false}, "YieldOnCurrentNode", $.Boolean);

    $.Property({Static:false, Public:false}, "YieldOnCurrentComponent", $.Boolean);

    $.Property({Static:false, Public:false}, "YieldEnumeration", $.Boolean);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneVisitor+VisitorSet */ 

(function VisitorSet$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm09.System.Type, $asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_VisitNodeMethod))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm09.System.Type, $asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_VisitComponentMethod))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("System.Type"), $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitNodeMethod")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("System.Type"), $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitComponentMethod")]), null))) ();
  };


  function VisitorSet__ctor () {
    this.Nodes = $S00().Construct();
    this.Components = $S01().Construct();
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneVisitor+VisitorSet", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      VisitorSet__ctor
    );

    $.Field({Static:false, Public:true }, "Nodes", $asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("System.Type"), $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitNodeMethod")]));

    $.Field({Static:false, Public:true }, "Components", $asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm09.TypeRef("System.Type"), $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitComponentMethod")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneFinderBase`1 */ 

(function SceneFinderBase$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };


  function SceneFinderBase$b1__ctor (rootList, match) {
    $T01().prototype._ctor.call(this);
    this._match = match;
    this._rootList = rootList;
    this.EnumInit(this._rootList);
  }; 

  function SceneFinderBase$b1_Dispose () {
    this._rootList = null;
    this._match = null;
  }; 

  function SceneFinderBase$b1_Reset () {
    this.EnumInit(this._rootList);
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), 
      Name: "Fusee.Engine.SimpleScene.SceneFinderBase`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TSceneElementType"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TSceneElementType")])]), 
      SceneFinderBase$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void, 
      SceneFinderBase$b1_Dispose
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void, 
      SceneFinderBase$b1_Reset
    );

    $.Field({Static:false, Public:false}, "_rootList", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:false}, "_match", $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TSceneElementType")]));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneNodeFinder`1 */ 

(function SceneNodeFinder$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Boolean)) ();
  };


  function SceneNodeFinder$b1__ctor (rootList, match) {
    $asm03.Fusee.Engine.SimpleScene.SceneFinderBase$b1.Of($thisType.TNode.get(this)).prototype._ctor.call(this, rootList, match);
  }; 

  function SceneNodeFinder$b1_get_Current () {
    return $thisType.TNode.get(this).$Cast(this.SceneVisitor$CurrentNode$value);
  }; 

  function SceneNodeFinder$b1_MatchNode (node) {
    var flag = (this._match !== null) && 
    this._match(JSIL.CloneParameter($thisType.TNode.get(this), node));
    if (flag) {
      this.SceneVisitor$YieldOnCurrentNode$value = true;
    }
  }; 

  function SceneNodeFinder$b1_MoveNext () {
    return this.EnumMoveNextNoComponent();
  }; 

  function SceneNodeFinder$b1_System_Collections_IEnumerator_get_Current () {
    return this.get_Current();
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneFinderBase`1", [new JSIL.GenericParameter("TNode", "Fusee.Engine.SimpleScene.SceneNodeFinder`1")]), 
      Name: "Fusee.Engine.SimpleScene.SceneNodeFinder`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TNode"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TNode")])]), 
      SceneNodeFinder$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($.GenericParameter("TNode"), null), 
      SceneNodeFinder$b1_get_Current
    );

    $.Method({Static:false, Public:false}, "MatchNode", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TNode")]), 
      SceneNodeFinder$b1_MatchNode
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneNodeFinder$b1_MoveNext
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      SceneNodeFinder$b1_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Property({Static:false, Public:true , Virtual:true }, "Current", $.GenericParameter("TNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TNode")]), 
      /* 1 */ $asm09.TypeRef("System.IDisposable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneComponentFinder`1 */ 

(function SceneComponentFinder$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Boolean)) ();
  };


  function SceneComponentFinder$b1__ctor (rootList, match) {
    $asm03.Fusee.Engine.SimpleScene.SceneFinderBase$b1.Of($thisType.TComponent.get(this)).prototype._ctor.call(this, rootList, match);
  }; 

  function SceneComponentFinder$b1_get_Current () {
    return $thisType.TComponent.get(this).$Cast(this.SceneVisitor$CurrentComponent$value);
  }; 

  function SceneComponentFinder$b1_MatchComponent (component) {
    var flag = (this._match !== null) && 
    this._match(JSIL.CloneParameter($thisType.TComponent.get(this), component));
    if (flag) {
      this.SceneVisitor$YieldOnCurrentComponent$value = true;
    }
  }; 

  function SceneComponentFinder$b1_MoveNext () {
    return this.EnumMoveNext();
  }; 

  function SceneComponentFinder$b1_System_Collections_IEnumerator_get_Current () {
    return this.get_Current();
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneFinderBase`1", [new JSIL.GenericParameter("TComponent", "Fusee.Engine.SimpleScene.SceneComponentFinder`1")]), 
      Name: "Fusee.Engine.SimpleScene.SceneComponentFinder`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TComponent"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TComponent")])]), 
      SceneComponentFinder$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($.GenericParameter("TComponent"), null), 
      SceneComponentFinder$b1_get_Current
    );

    $.Method({Static:false, Public:false}, "MatchComponent", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TComponent")]), 
      SceneComponentFinder$b1_MatchComponent
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneComponentFinder$b1_MoveNext
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      SceneComponentFinder$b1_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Property({Static:false, Public:true , Virtual:true }, "Current", $.GenericParameter("TComponent"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TComponent")]), 
      /* 1 */ $asm09.TypeRef("System.IDisposable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneNodeWhereComponentFinder`2 */ 

(function SceneNodeWhereComponentFinder$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Boolean)) ();
  };


  function SceneNodeWhereComponentFinder$b2__ctor (rootList, match) {
    $asm03.Fusee.Engine.SimpleScene.SceneFinderBase$b1.Of($thisType.TComponent.get(this)).prototype._ctor.call(this, rootList, match);
  }; 

  function SceneNodeWhereComponentFinder$b2_get_Current () {
    return $thisType.TNode.get(this).$Cast(this.SceneVisitor$CurrentNode$value);
  }; 

  function SceneNodeWhereComponentFinder$b2_MatchComponent (component) {
    var flag = (this._match !== null) && 
    this._match(JSIL.CloneParameter($thisType.TComponent.get(this), component));
    if (flag) {
      this.SceneVisitor$YieldOnCurrentComponent$value = true;
    }
  }; 

  function SceneNodeWhereComponentFinder$b2_MoveNext () {
    return this.EnumMoveNext();
  }; 

  function SceneNodeWhereComponentFinder$b2_System_Collections_IEnumerator_get_Current () {
    return this.get_Current();
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneFinderBase`1", [new JSIL.GenericParameter("TComponent", "Fusee.Engine.SimpleScene.SceneNodeWhereComponentFinder`2")]), 
      Name: "Fusee.Engine.SimpleScene.SceneNodeWhereComponentFinder`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TNode", "TComponent"], 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", [$.GenericParameter("TComponent")])]), 
      SceneNodeWhereComponentFinder$b2__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($.GenericParameter("TNode"), null), 
      SceneNodeWhereComponentFinder$b2_get_Current
    );

    $.Method({Static:false, Public:false}, "MatchComponent", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TComponent")]), 
      SceneNodeWhereComponentFinder$b2_MatchComponent
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      SceneNodeWhereComponentFinder$b2_MoveNext
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      SceneNodeWhereComponentFinder$b2_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Property({Static:false, Public:true , Virtual:true }, "Current", $.GenericParameter("TNode"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TNode")]), 
      /* 1 */ $asm09.TypeRef("System.IDisposable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Fusee.Engine.SimpleScene.PickResult */ 

(function PickResult$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.NotImplementedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.NotImplementedException"), null))) ();
  };


  function PickResult_get_ModelPos () {
    throw $S00().Construct();
  }; 

  function PickResult_get_ScreenPos () {
    throw $S00().Construct();
  }; 

  function PickResult_get_WorldPos () {
    throw $S00().Construct();
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.ValueType"), 
      Name: "Fusee.Engine.SimpleScene.PickResult", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, "get_ModelPos", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float3")), 
      PickResult_get_ModelPos
    );

    $.Method({Static:false, Public:true }, "get_ScreenPos", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4")), 
      PickResult_get_ScreenPos
    );

    $.Method({Static:false, Public:true }, "get_WorldPos", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float3")), 
      PickResult_get_WorldPos
    );

    $.Field({Static:false, Public:true }, "Node", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:true }, "Mesh", $asm06.TypeRef("Fusee.Serialization.MeshComponent"));

    $.Field({Static:false, Public:true }, "Triangle", $.Int32);

    $.Field({Static:false, Public:true }, "WA", $.Single);

    $.Field({Static:false, Public:true }, "WB", $.Single);

    $.Field({Static:false, Public:true }, "WC", $.Single);

    $.Property({Static:false, Public:true }, "WorldPos", $asm05.TypeRef("Fusee.Math.float3"));

    $.Property({Static:false, Public:true }, "ModelPos", $asm05.TypeRef("Fusee.Math.float3"));

    $.Property({Static:false, Public:true }, "ScreenPos", $asm05.TypeRef("Fusee.Math.float4"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.ViseratorBase`1 */ 

(function ViseratorBase$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Boolean)) ();
  };


  function ViseratorBase$b1__ctor () {
    var $s00 = new JSIL.ConstructorSignature($asm0B.TypeRef("System.Collections.Generic.Queue`1", [$thisType.TItem.get(this)]), [$asm09.System.Int32]);
    this._itemQueue = $s00.Construct(1);
    $T00().prototype._ctor.call(this);
  }; 

  function ViseratorBase$b1_Dispose () {
    this._rootList = null;
  }; 

  function ViseratorBase$b1_get_Current () {
    return $asm0B.System.Collections.Generic.Queue$b1.Of($thisType.TItem.get(this)).prototype.Dequeue.call(this._itemQueue);
  }; 

  function ViseratorBase$b1_Init (rootList) {
    this._rootList = rootList;
    this.EnumInit(this._rootList);
  }; 

  function ViseratorBase$b1_MoveNext () {
    var flag = ((this._itemQueue).get_Count() | 0) > 0;
    return (flag || this.EnumMoveNext());
  }; 

  function ViseratorBase$b1_Reset () {
    this.EnumInit(this._rootList);
  }; 

  function ViseratorBase$b1_System_Collections_IEnumerator_get_Current () {
    return this.get_Current();
  }; 

  function ViseratorBase$b1_YieldItem (item) {
    this.SceneVisitor$YieldOnCurrentComponent$value = true;
    $asm0B.System.Collections.Generic.Queue$b1.Of($thisType.TItem.get(this)).prototype.Enqueue.call(this._itemQueue, JSIL.CloneParameter($thisType.TItem.get(this), item));
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), 
      Name: "Fusee.Engine.SimpleScene.ViseratorBase`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TItem"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ViseratorBase$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void, 
      ViseratorBase$b1_Dispose
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($.GenericParameter("TItem"), null), 
      ViseratorBase$b1_get_Current
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Init", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      ViseratorBase$b1_Init
    );

    $.Method({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      ViseratorBase$b1_MoveNext
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void, 
      ViseratorBase$b1_Reset
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      ViseratorBase$b1_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Method({Static:false, Public:false}, "YieldItem", 
      new JSIL.MethodSignature(null, [$.GenericParameter("TItem")]), 
      ViseratorBase$b1_YieldItem
    );

    $.Field({Static:false, Public:false}, "_rootList", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:false}, "_itemQueue", $asm0B.TypeRef("System.Collections.Generic.Queue`1", [$.GenericParameter("TItem")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Current", $.GenericParameter("TItem"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TItem")]), 
      /* 1 */ $asm09.TypeRef("System.IDisposable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.Viserator`2 */ 

(function Viserator$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Activator)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack)) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack.Clear)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack.Pop)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack.Push)) ();
  };


  function Viserator$b2__ctor$00 () {
    $asm03.Fusee.Engine.SimpleScene.ViseratorBase$b1.Of($thisType.TItem.get(this)).prototype._ctor.call(this);
  }; 

  function Viserator$b2__ctor$01 (rootList) {
    $asm03.Fusee.Engine.SimpleScene.ViseratorBase$b1.Of($thisType.TItem.get(this)).prototype._ctor.call(this);
    this.Init(rootList);
  }; 

  function Viserator$b2_Init (rootList) {
    this.State = JSIL.CloneParameter($thisType.TState.get(this), $T01().CreateInstance$b1($thisType.TState.get(this))());
    $asm03.Fusee.Engine.SimpleScene.ViseratorBase$b1.Of($thisType.TItem.get(this)).prototype.Init.call(this, rootList);
  }; 

  function Viserator$b2_InitState () {
    $IM00().Call(this.State, null);
  }; 

  function Viserator$b2_PopState () {
    $IM01().Call(this.State, null);
  }; 

  function Viserator$b2_PushState () {
    $IM02().Call(this.State, null);
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.ViseratorBase`1", [new JSIL.GenericParameter("TItem", "Fusee.Engine.SimpleScene.Viserator`2")]), 
      Name: "Fusee.Engine.SimpleScene.Viserator`2", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TItem", "TState"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Viserator$b2__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      Viserator$b2__ctor$01
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Init", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      Viserator$b2_Init
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      Viserator$b2_InitState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      Viserator$b2_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      Viserator$b2_PushState
    );

    $.Field({Static:false, Public:false}, "State", $.GenericParameter("TState"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.ScenePicker */ 

(function ScenePicker$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.Viserator$b2.Of($asm03.Fusee.Engine.SimpleScene.PickResult, $asm03.Fusee.Engine.SimpleScene.ScenePicker_PickingState))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.ScenePicker_PickingState)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.Serialization.MeshComponent)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.Fusee.Serialization.TransformComponent)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4x4"), [$asm05.TypeRef("Fusee.Math.float4x4"), $asm05.TypeRef("Fusee.Math.float4x4")]))) ();
  };


  function ScenePicker__ctor (rootList) {
    $T01().prototype._ctor.call(this, rootList);
    (this.State.Model = $T03().Identity.MemberwiseClone());
  }; 

  function ScenePicker_PickMesh (meshComponent) {
  }; 

  function ScenePicker_PickTransform (transform) {
    var state = JSIL.CloneParameter(TState, this.State);
    (state.Model = $S00().CallStatic($T03(), "op_Multiply", null, 
        state.get_Model().MemberwiseClone(), 
        $T06().Matrix(transform).MemberwiseClone()
      ).MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.Viserator`2", [$asm03.TypeRef("Fusee.Engine.SimpleScene.PickResult"), $asm03.TypeRef("Fusee.Engine.SimpleScene.ScenePicker+PickingState")]), 
      Name: "Fusee.Engine.SimpleScene.ScenePicker", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      ScenePicker__ctor
    );

    $.Method({Static:false, Public:true }, "PickMesh", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.MeshComponent")), 
      ScenePicker_PickMesh
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true }, "PickTransform", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.TransformComponent")), 
      ScenePicker_PickTransform
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.VisitorState */ 

(function VisitorState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm03.Fusee.Engine.SimpleScene.IStateStack))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0D.System.Linq.Enumerable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.List`1", [$asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack.Clear)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack.get_Depth)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack.Pop)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.IStateStack.Push)) ();
  };


  function VisitorState__ctor () {
    this._stacks = $S00().Construct();
  }; 

  function VisitorState_Clear () {
    var $temp00;

    for (var a$0 = this._stacks._items, i$0 = 0, l$0 = (this._stacks._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $IM00().Call(current, null);
    }
  }; 

  function VisitorState_get_Depth () {
    return $IM01().Call($S01().CallStatic($T03(), "First$b1", [$asm03.Fusee.Engine.SimpleScene.IStateStack], this._stacks), null);
  }; 

  function VisitorState_Pop () {
    var $temp00;

    for (var a$0 = this._stacks._items, i$0 = 0, l$0 = (this._stacks._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $IM02().Call(current, null);
    }
  }; 

  function VisitorState_Push () {
    var $temp00;

    for (var a$0 = this._stacks._items, i$0 = 0, l$0 = (this._stacks._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $IM03().Call(current, null);
    }
  }; 

  function VisitorState_RegisterState (stack) {
    $S02().CallVirtual("Add", null, this._stacks, stack);
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.VisitorState", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      VisitorState__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void, 
      VisitorState_Clear
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32), 
      VisitorState_get_Depth
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Pop", 
      JSIL.MethodSignature.Void, 
      VisitorState_Pop
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Push", 
      JSIL.MethodSignature.Void, 
      VisitorState_Push
    );

    $.Method({Static:false, Public:false}, "RegisterState", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")), 
      VisitorState_RegisterState
    );

    $.Field({Static:false, Public:false}, "_stacks", $asm09.TypeRef("System.Collections.Generic.List`1", [$asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")]));

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.ScenePicker+PickingState */ 

(function PickingState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.CollapsingStateStack$b1.Of($asm05.Fusee.Math.float4x4))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitorState)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };


  function PickingState__ctor () {
    this._model = new ($T00())(4);
    this._view = new ($T00())(4);
    this._projection = new ($T00())(4);
    $T01().prototype._ctor.call(this);
    this.RegisterState(this._model);
    this.RegisterState(this._view);
    this.RegisterState(this._projection);
  }; 

  function PickingState_get_Model () {
    return (this._model).get_Tos();
  }; 

  function PickingState_get_Projection () {
    return (this._projection).get_Tos();
  }; 

  function PickingState_get_View () {
    return (this._view).get_Tos();
  }; 

  function PickingState_set_Model (value) {
    (this._model).set_Tos(value.MemberwiseClone());
  }; 

  function PickingState_set_Projection (value) {
    (this._projection).set_Tos(value.MemberwiseClone());
  }; 

  function PickingState_set_View (value) {
    (this._view).set_Tos(value.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.VisitorState"), 
      Name: "Fusee.Engine.SimpleScene.ScenePicker+PickingState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      PickingState__ctor
    );

    $.Method({Static:false, Public:true }, "get_Model", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      PickingState_get_Model
    );

    $.Method({Static:false, Public:true }, "get_Projection", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      PickingState_get_Projection
    );

    $.Method({Static:false, Public:true }, "get_View", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      PickingState_get_View
    );

    $.Method({Static:false, Public:true }, "set_Model", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      PickingState_set_Model
    );

    $.Method({Static:false, Public:true }, "set_Projection", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      PickingState_set_Projection
    );

    $.Method({Static:false, Public:true }, "set_View", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      PickingState_set_View
    );

    $.Field({Static:false, Public:false}, "_model", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Field({Static:false, Public:false}, "_view", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Field({Static:false, Public:false}, "_projection", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Property({Static:false, Public:true }, "Model", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.Property({Static:false, Public:true }, "View", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.Property({Static:false, Public:true }, "Projection", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.AABBCalculator */ 

(function AABBCalculator$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.SceneContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.AABBCalculator_AABBState)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitorState)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.Fusee.Serialization.MeshComponent)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm05.Fusee.Math.AABBf)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.Fusee.Serialization.TransformComponent)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.ContainerExtensions)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4x4"), [$asm05.TypeRef("Fusee.Math.float4x4"), $asm05.TypeRef("Fusee.Math.float4x4")]))) ();
  };


  function AABBCalculator__ctor$00 (sc) {
    this._state = new ($T01())();
    $T02().prototype._ctor.call(this);
    this._sncList = sc.Children;
  }; 

  function AABBCalculator__ctor$01 (sncList) {
    this._state = new ($T01())();
    $T02().prototype._ctor.call(this);
    this._sncList = sncList;
  }; 

  function AABBCalculator__ctor$02 (snc) {
    this._state = new ($T01())();
    $T02().prototype._ctor.call(this);
    this._sncList = $T05().SingleRootEnumerable(snc);
  }; 

  function AABBCalculator_GetBox () {
    $S00().CallVirtual("Traverse", null, this, this._sncList);
    var boxValid = this._boxValid;
    if (boxValid) {
      var result = this._result.MemberwiseClone();
    } else {
      result = null;
    }
    return result;
  }; 

  function AABBCalculator_InitState () {
    this._boxValid = false;
    (this._state).Clear();
    (this._state.ModelView = $T08().Identity.MemberwiseClone());
  }; 

  function AABBCalculator_OnMesh (meshComponent) {
    var aABBf = $T0A().op_Multiply((this._state).get_ModelView(), meshComponent.BoundingBox.MemberwiseClone()).MemberwiseClone();
    if (!this._boxValid) {
      this._result = aABBf.MemberwiseClone();
      this._boxValid = true;
    } else {
      this._result = $T0A().Union(this._result, aABBf).MemberwiseClone();
    }
  }; 

  function AABBCalculator_OnTransform (transform) {
    var state = this._state;
    (state.ModelView = $S01().CallStatic($T08(), "op_Multiply", null, 
        state.get_ModelView().MemberwiseClone(), 
        $T0C().Matrix(transform).MemberwiseClone()
      ).MemberwiseClone());
  }; 

  function AABBCalculator_PopState () {
    (this._state).Pop();
  }; 

  function AABBCalculator_PushState () {
    (this._state).Push();
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), 
      Name: "Fusee.Engine.SimpleScene.AABBCalculator", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneContainer")), 
      AABBCalculator__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      AABBCalculator__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      AABBCalculator__ctor$02
    );

    $.Method({Static:false, Public:true }, "GetBox", 
      JSIL.MethodSignature.Return($asm09.TypeRef("System.Nullable`1", [$asm05.TypeRef("Fusee.Math.AABBf")])), 
      AABBCalculator_GetBox
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      AABBCalculator_InitState
    );

    $.Method({Static:false, Public:true }, "OnMesh", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.MeshComponent")), 
      AABBCalculator_OnMesh
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true }, "OnTransform", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.TransformComponent")), 
      AABBCalculator_OnTransform
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      AABBCalculator_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      AABBCalculator_PushState
    );

    $.Field({Static:false, Public:false}, "_sncList", $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.Field({Static:false, Public:false}, "_state", $asm03.TypeRef("Fusee.Engine.SimpleScene.AABBCalculator+AABBState"));

    $.Field({Static:false, Public:false}, "_boxValid", $.Boolean);

    $.Field({Static:false, Public:false}, "_result", $asm05.TypeRef("Fusee.Math.AABBf"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.AABBCalculator+AABBState */ 

(function AABBState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.CollapsingStateStack$b1.Of($asm05.Fusee.Math.float4x4))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitorState)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };


  function AABBState__ctor () {
    this._modelView = new ($T00())(4);
    $T01().prototype._ctor.call(this);
    this.RegisterState(this._modelView);
  }; 

  function AABBState_get_ModelView () {
    return (this._modelView).get_Tos();
  }; 

  function AABBState_set_ModelView (value) {
    (this._modelView).set_Tos(value.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.VisitorState"), 
      Name: "Fusee.Engine.SimpleScene.AABBCalculator+AABBState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      AABBState__ctor
    );

    $.Method({Static:false, Public:true }, "get_ModelView", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      AABBState_get_ModelView
    );

    $.Method({Static:false, Public:true }, "set_ModelView", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      AABBState_set_ModelView
    );

    $.Field({Static:false, Public:false}, "_modelView", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Property({Static:false, Public:true }, "ModelView", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.LightInfo */ 

(function LightInfo$Members () {
  var $, $thisType;

  function LightInfo__ctor () {
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.LightInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      LightInfo__ctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneRenderer */ 

(function SceneRenderer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.SceneContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm03.Fusee.Engine.SimpleScene.LightInfo))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneRenderer_RendererState)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm04.Fusee.KeyFrameAnimation.ChannelBase))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Animation)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.ShaderCodeBuilder)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm02.Fusee.Engine.EffectParameterDeclaration))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm02.Fusee.Engine.EffectParameterDeclaration)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm05.Fusee.Math.float3)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm09.System.Predicate$b1.Of($asm06.Fusee.Serialization.AnimationComponent))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneRenderer_$l$gc)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.AnimationComponent))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.AnimationComponent))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.Fusee.Serialization.AnimationComponent)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneFinderExtensions)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm09.System.Collections.IEnumerator)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.Fusee.Serialization.AnimationTrackContainer)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm09.System.Type)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1.Of($asm09.System.Int32))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1_LerpFunc.Of($asm09.System.Int32))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Lerp)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.Fusee.Serialization.AnimationKeyContainerInt)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Keyframe$b1.Of($asm09.System.Int32))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm09.System.Single)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1.Of($asm09.System.Single))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1_LerpFunc.Of($asm09.System.Single))) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm06.Fusee.Serialization.AnimationKeyContainerFloat)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Keyframe$b1.Of($asm09.System.Single))) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm05.Fusee.Math.float2)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1.Of($asm05.Fusee.Math.float2))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1_LerpFunc.Of($asm05.Fusee.Math.float2))) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm06.Fusee.Serialization.AnimationKeyContainerFloat2)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Keyframe$b1.Of($asm05.Fusee.Math.float2))) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm06.Fusee.Serialization.LerpType)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm0B.System.ComponentModel.InvalidEnumArgumentException)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1_LerpFunc.Of($asm05.Fusee.Math.float3))) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1.Of($asm05.Fusee.Math.float3))) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm06.Fusee.Serialization.AnimationKeyContainerFloat3)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Keyframe$b1.Of($asm05.Fusee.Math.float3))) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm05.Fusee.Math.float4)) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1.Of($asm05.Fusee.Math.float4))) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Channel$b1_LerpFunc.Of($asm05.Fusee.Math.float4))) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm06.Fusee.Serialization.AnimationKeyContainerFloat4)) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm04.Fusee.KeyFrameAnimation.Keyframe$b1.Of($asm05.Fusee.Math.float4))) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm09.System.IDisposable)) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitorState)) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize($asm02.Fusee.Engine.RenderContext)) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize($asm09.System.IO.Path)) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize($asm01.Fusee.Engine.ImageData)) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm02.Fusee.Engine.ShaderEffect)) ();
  };
  var $T39 = function () {
    return ($T39 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm06.Fusee.Serialization.MaterialComponent, $asm02.Fusee.Engine.ShaderEffect))) ();
  };
  var $T3A = function () {
    return ($T3A = JSIL.Memoize($asm06.Fusee.Serialization.WeightComponent)) ();
  };
  var $T3B = function () {
    return ($T3B = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.ContainerExtensions)) ();
  };
  var $T3C = function () {
    return ($T3C = JSIL.Memoize(System.Array.Of($asm02.Fusee.Engine.EffectPassDeclaration))) ();
  };
  var $T3D = function () {
    return ($T3D = JSIL.Memoize($asm02.Fusee.Engine.EffectPassDeclaration)) ();
  };
  var $T3E = function () {
    return ($T3E = JSIL.Memoize($asm02.Fusee.Engine.RenderStateSet)) ();
  };
  var $T3F = function () {
    return ($T3F = JSIL.Memoize($asm06.Fusee.Serialization.MeshComponent)) ();
  };
  var $T40 = function () {
    return ($T40 = JSIL.Memoize($asm02.Fusee.Engine.Mesh)) ();
  };
  var $T41 = function () {
    return ($T41 = JSIL.Memoize(System.Array.Of($asm05.Fusee.Math.float4))) ();
  };
  var $T42 = function () {
    return ($T42 = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm06.Fusee.Serialization.VertexWeightList))) ();
  };
  var $T43 = function () {
    return ($T43 = JSIL.Memoize($asm09.System.Math)) ();
  };
  var $T44 = function () {
    return ($T44 = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm06.Fusee.Serialization.VertexWeight))) ();
  };
  var $T45 = function () {
    return ($T45 = JSIL.Memoize($asm06.Fusee.Serialization.VertexWeightList)) ();
  };
  var $T46 = function () {
    return ($T46 = JSIL.Memoize($asm06.Fusee.Serialization.BoneComponent)) ();
  };
  var $T47 = function () {
    return ($T47 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T48 = function () {
    return ($T48 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm06.Fusee.Serialization.SceneNodeContainer, $asm05.Fusee.Math.float4x4))) ();
  };
  var $T49 = function () {
    return ($T49 = JSIL.Memoize($asm09.System.Collections.Generic.Dictionary$b2.Of($asm06.Fusee.Serialization.MeshComponent, $asm02.Fusee.Engine.Mesh))) ();
  };
  var $T4A = function () {
    return ($T4A = JSIL.Memoize($asm06.Fusee.Serialization.TransformComponent)) ();
  };
  var $T4B = function () {
    return ($T4B = JSIL.Memoize(System.Array.Of($asm05.Fusee.Math.float4x4))) ();
  };
  var $T4C = function () {
    return ($T4C = JSIL.Memoize($asm0D.System.Linq.Enumerable)) ();
  };
  var $T4D = function () {
    return ($T4D = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm05.Fusee.Math.float4x4))) ();
  };
  var $T4E = function () {
    return ($T4E = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T4F = function () {
    return ($T4F = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.LightInfo)) ();
  };
  var $T50 = function () {
    return ($T50 = JSIL.Memoize($asm09.System.ArgumentNullException)) ();
  };
  var $T51 = function () {
    return ($T51 = JSIL.Memoize($asm06.Fusee.Serialization.MatChannelContainer)) ();
  };
  var $T52 = function () {
    return ($T52 = JSIL.Memoize($asm06.Fusee.Serialization.SpecularChannelContainer)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.List`1", [$asm03.TypeRef("Fusee.Engine.SimpleScene.LightInfo")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Fusee.Engine.EffectParameterDeclaration")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm02.TypeRef("Fusee.Engine.EffectParameterDeclaration")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm05.TypeRef("Fusee.Math.float3"), [
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single"), 
        $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Boolean"), [$asm06.TypeRef("Fusee.Serialization.AnimationComponent")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), $asm09.TypeRef("System.Predicate`1", ["!!0"])], ["TComponent"]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Boolean"), [$asm09.TypeRef("System.Type")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1", [$asm09.TypeRef("System.Int32")]), [$asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1+LerpFunc", [$asm09.TypeRef("System.Int32")])]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Int32"), [
        $asm09.TypeRef("System.Int32"), $asm09.TypeRef("System.Int32"), 
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1", [$asm09.TypeRef("System.Single")]), [$asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1+LerpFunc", [$asm09.TypeRef("System.Single")])]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Single"), [
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single"), 
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1", [$asm05.TypeRef("Fusee.Math.float2")]), [$asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1+LerpFunc", [$asm05.TypeRef("Fusee.Math.float2")])]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float2"), [
        $asm05.TypeRef("Fusee.Math.float2"), $asm05.TypeRef("Fusee.Math.float2"), 
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.ConstructorSignature($asm0B.TypeRef("System.ComponentModel.InvalidEnumArgumentException"), [
        $asm09.TypeRef("System.String"), $asm09.TypeRef("System.Int32"), 
        $asm09.TypeRef("System.Type")
      ]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float3"), [
        $asm05.TypeRef("Fusee.Math.float3"), $asm05.TypeRef("Fusee.Math.float3"), 
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float3"), [
        $asm05.TypeRef("Fusee.Math.float3"), $asm05.TypeRef("Fusee.Math.float3"), 
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S10 = function () {
    return ($S10 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1", [$asm05.TypeRef("Fusee.Math.float3")]), [$asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1+LerpFunc", [$asm05.TypeRef("Fusee.Math.float3")])]))) ();
  };
  var $S11 = function () {
    return ($S11 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1", [$asm05.TypeRef("Fusee.Math.float4")]), [$asm04.TypeRef("Fusee.KeyFrameAnimation.Channel`1+LerpFunc", [$asm05.TypeRef("Fusee.Math.float4")])]))) ();
  };
  var $S12 = function () {
    return ($S12 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4"), [
        $asm05.TypeRef("Fusee.Math.float4"), $asm05.TypeRef("Fusee.Math.float4"), 
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S13 = function () {
    return ($S13 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4x4"), [$asm05.TypeRef("Fusee.Math.float4x4"), $asm05.TypeRef("Fusee.Math.float4x4")]))) ();
  };
  var $S14 = function () {
    return ($S14 = JSIL.Memoize(JSIL.MethodSignature.Action($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])))) ();
  };
  var $S15 = function () {
    return ($S15 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Int32"), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["TSource"]))) ();
  };
  var $S16 = function () {
    return ($S16 = JSIL.Memoize(new JSIL.MethodSignature($asm05.TypeRef("Fusee.Math.float4"), [$asm05.TypeRef("Fusee.Math.float4x4"), $asm05.TypeRef("Fusee.Math.float4")]))) ();
  };
  var $S17 = function () {
    return ($S17 = JSIL.Memoize(new JSIL.ConstructorSignature($asm05.TypeRef("Fusee.Math.float4"), [
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single"), 
        $asm09.TypeRef("System.Single"), $asm09.TypeRef("System.Single")
      ]))) ();
  };
  var $S18 = function () {
    return ($S18 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.ArgumentNullException"), [$asm09.TypeRef("System.String")]))) ();
  };
  var $S19 = function () {
    return ($S19 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Serialization.MeshComponent"), $asm02.TypeRef("Fusee.Engine.Mesh")]), null))) ();
  };
  var $S1A = function () {
    return ($S1A = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Serialization.MaterialComponent"), $asm02.TypeRef("Fusee.Engine.ShaderEffect")]), null))) ();
  };
  var $S1B = function () {
    return ($S1B = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm05.TypeRef("Fusee.Math.float4x4")]), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.AnimationComponent).GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm09.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerator$b1.Of($asm06.Fusee.Serialization.AnimationComponent).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm09.System.IDisposable.Dispose)) ();
  };


  function SceneRenderer__ctor (sc, scenePathDirectory) {
    $T02().prototype._ctor.call(this);
    this._lights = $S00().Construct();
    this._sc = sc;
    this._scenePathDirectory = scenePathDirectory;
    this._state = new ($T04())();
    this.InitAnimations(this._sc);
  }; 

  function SceneRenderer_Animate () {
    var flag = (((this._animation).get_ChannelBaseList()).get_Count() | 0) > 0;
    if (flag) {
      (this._animation).Animate();
    }
  }; 

  function SceneRenderer_AssembleEffectParamers (mc, scb) {
    var list = $S01().Construct();
    var hasDiffuse = mc.get_HasDiffuse();
    if (hasDiffuse) {
      var item = new ($T0B())();
      item.Name = scb.get_DiffuseColorName();
      item.Value = mc.Diffuse.Color.MemberwiseClone();
      $S02().CallVirtual("Add", null, list, item.MemberwiseClone());
      var flag = mc.Diffuse.Texture !== null;
      if (flag) {
        var arg_8A_0 = list;
        item = new ($T0B())();
        item.Name = scb.get_DiffuseMixName();
        item.Value = mc.Diffuse.Mix;
        $S02().CallVirtual("Add", null, arg_8A_0, item.MemberwiseClone());
        var arg_BF_0 = list;
        item = new ($T0B())();
        item.Name = scb.get_DiffuseTextureName();
        item.Value = this.LoadTexture(mc.Diffuse.Texture);
        $S02().CallVirtual("Add", null, arg_BF_0, item.MemberwiseClone());
      }
    }
    var hasSpecular = mc.get_HasSpecular();
    if (hasSpecular) {
      var arg_105_0 = list;
      item = new ($T0B())();
      item.Name = scb.get_SpecularColorName();
      item.Value = mc.Specular.Color.MemberwiseClone();
      $S02().CallVirtual("Add", null, arg_105_0, item.MemberwiseClone());
      var arg_139_0 = list;
      item = new ($T0B())();
      item.Name = scb.get_SpecularShininessName();
      item.Value = mc.Specular.Shininess;
      $S02().CallVirtual("Add", null, arg_139_0, item.MemberwiseClone());
      var arg_16D_0 = list;
      item = new ($T0B())();
      item.Name = scb.get_SpecularIntensityName();
      item.Value = mc.Specular.Intensity;
      $S02().CallVirtual("Add", null, arg_16D_0, item.MemberwiseClone());
      var flag2 = mc.Specular.Texture !== null;
      if (flag2) {
        var arg_1B6_0 = list;
        item = new ($T0B())();
        item.Name = scb.get_SpecularMixName();
        item.Value = mc.Specular.Mix;
        $S02().CallVirtual("Add", null, arg_1B6_0, item.MemberwiseClone());
        var arg_1EB_0 = list;
        item = new ($T0B())();
        item.Name = scb.get_SpecularTextureName();
        item.Value = this.LoadTexture(mc.Specular.Texture);
        $S02().CallVirtual("Add", null, arg_1EB_0, item.MemberwiseClone());
      }
    }
    var hasEmissive = mc.get_HasEmissive();
    if (hasEmissive) {
      var arg_231_0 = list;
      item = new ($T0B())();
      item.Name = scb.get_EmissiveColorName();
      item.Value = mc.Emissive.Color.MemberwiseClone();
      $S02().CallVirtual("Add", null, arg_231_0, item.MemberwiseClone());
      var flag3 = mc.Emissive.Texture !== null;
      if (flag3) {
        var arg_27A_0 = list;
        item = new ($T0B())();
        item.Name = scb.get_EmissiveMixName();
        item.Value = mc.Emissive.Mix;
        $S02().CallVirtual("Add", null, arg_27A_0, item.MemberwiseClone());
        var arg_2AF_0 = list;
        item = new ($T0B())();
        item.Name = scb.get_EmissiveTextureName();
        item.Value = this.LoadTexture(mc.Emissive.Texture);
        $S02().CallVirtual("Add", null, arg_2AF_0, item.MemberwiseClone());
      }
    }
    var hasBump = mc.get_HasBump();
    if (hasBump) {
      var arg_2F2_0 = list;
      item = new ($T0B())();
      item.Name = scb.get_BumpIntensityName();
      item.Value = mc.Bump.Intensity;
      $S02().CallVirtual("Add", null, arg_2F2_0, item.MemberwiseClone());
      var arg_327_0 = list;
      item = new ($T0B())();
      item.Name = scb.get_BumpTextureName();
      item.Value = this.LoadTexture(mc.Bump.Texture);
      $S02().CallVirtual("Add", null, arg_327_0, item.MemberwiseClone());
    }
    var flag4 = mc.get_HasDiffuse() || 
    mc.get_HasSpecular();
    if (flag4) {
      var arg_37F_0 = list;
      item = new ($T0B())();
      item.Name = $T09().get_LightColorName();
      item.Value = $S03().Construct(1, 1, 1);
      $S02().CallVirtual("Add", null, arg_37F_0, item.MemberwiseClone());
      var arg_3AC_0 = list;
      item = new ($T0B())();
      item.Name = $T09().get_LightIntensityName();
      item.Value = 1;
      $S02().CallVirtual("Add", null, arg_3AC_0, item.MemberwiseClone());
      var arg_3E8_0 = list;
      item = new ($T0B())();
      item.Name = $T09().get_LightDirectionName();
      item.Value = $S03().Construct(0, 0, 1);
      $S02().CallVirtual("Add", null, arg_3E8_0, item.MemberwiseClone());
    }
    return list;
  }; 

  function SceneRenderer_InitAnimations (sc) {
    var $temp00, $temp01, $temp02, $temp03, $temp04, $temp05;
    var arg_33_1 = null;
    this._animation = new ($T07())(0);
    var arg_33_0 = sc.Children;
    if ((arg_33_1 = $T0F().$l$g9__13_0) === null) {
      arg_33_1 = $T0F().$l$g9__13_0 = $T0D().New($T0F().$l$g9, function () { return $T0F().prototype.$lInitAnimations$gb__13_0.call($T0F().$l$g9, arguments[0]); }.bind(this), function () { return JSIL.GetMethodInfo($asm03.Fusee.Engine.SimpleScene.SceneRenderer_$l$gc, "$lInitAnimations$gb__13_0", $S04(), false); }.bind(this));
    }
    var enumerator = $IM00().Call($S05().CallStatic($T13(), "FindComponents$b1", [$asm06.Fusee.Serialization.AnimationComponent], arg_33_0, arg_33_1), null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        var flag = current.AnimationTracks !== null;
        if (flag) {

          for (var a$0 = current.AnimationTracks._items, i$0 = 0, l$0 = (current.AnimationTracks._size | 0); i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current2 = a$0[i$0];
            var keyType = current2.KeyType;
            var flag2 = $S06().CallVirtual("IsAssignableFrom", null, $T15().__Type__, keyType);
            if (flag2) {
              var channel = $S07().Construct($T19().New($T1A(), function () { return $T1A().IntLerp(arguments[0], arguments[1], arguments[2], arguments[3]); }.bind(this), function () { return JSIL.GetMethodInfo($asm04.Fusee.KeyFrameAnimation.Lerp, "IntLerp", $S08(), true); }.bind(this)));

              for (var a$1 = current2.KeyFrames._items, i$1 = 0, l$1 = (current2.KeyFrames._size | 0); i$1 < l$1; ($temp01 = i$1, 
                  i$1 = ((i$1 + 1) | 0), 
                  $temp01)) {
                var animationKeyContainerInt = $T1B().$Cast(a$1[i$1]);
                $T18().prototype.AddKeyframe.call(channel, new ($T1C())(animationKeyContainerInt.Time, animationKeyContainerInt.Value));
              }
              (this._animation).AddAnimation$b1($T15())(channel, current2.SceneComponent, current2.Property);
            } else {
              var flag3 = $S06().CallVirtual("IsAssignableFrom", null, $T1D().__Type__, keyType);
              if (flag3) {
                var channel2 = $S09().Construct($T1F().New($T1A(), function () { return $T1A().FloatLerp(arguments[0], arguments[1], arguments[2], arguments[3]); }.bind(this), function () { return JSIL.GetMethodInfo($asm04.Fusee.KeyFrameAnimation.Lerp, "FloatLerp", $S0A(), true); }.bind(this)));

                for (var a$2 = current2.KeyFrames._items, i$2 = 0, l$2 = (current2.KeyFrames._size | 0); i$2 < l$2; ($temp02 = i$2, 
                    i$2 = ((i$2 + 1) | 0), 
                    $temp02)) {
                  var animationKeyContainerFloat = $T20().$Cast(a$2[i$2]);
                  $T1E().prototype.AddKeyframe.call(channel2, new ($T21())(animationKeyContainerFloat.Time, animationKeyContainerFloat.Value));
                }
                (this._animation).AddAnimation$b1($T1D())(channel2, current2.SceneComponent, current2.Property);
              } else {
                var flag4 = $S06().CallVirtual("IsAssignableFrom", null, $T22().__Type__, keyType);
                if (flag4) {
                  var channel3 = $S0B().Construct($T24().New($T1A(), function () { return $T1A().Float2Lerp(arguments[0], arguments[1], arguments[2], arguments[3]); }.bind(this), function () { return JSIL.GetMethodInfo($asm04.Fusee.KeyFrameAnimation.Lerp, "Float2Lerp", $S0C(), true); }.bind(this)));

                  for (var a$3 = current2.KeyFrames._items, i$3 = 0, l$3 = (current2.KeyFrames._size | 0); i$3 < l$3; ($temp03 = i$3, 
                      i$3 = ((i$3 + 1) | 0), 
                      $temp03)) {
                    var animationKeyContainerFloat2 = $T25().$Cast(a$3[i$3]);
                    $T23().prototype.AddKeyframe.call(channel3, new ($T26())(animationKeyContainerFloat2.Time, animationKeyContainerFloat2.Value.MemberwiseClone()));
                  }
                  (this._animation).AddAnimation$b1($T22())(channel3, current2.SceneComponent, current2.Property);
                } else {
                  var flag5 = $S06().CallVirtual("IsAssignableFrom", null, $T0C().__Type__, keyType);
                  if (flag5) {
                    var lerpType = current2.LerpType;
                    if ((lerpType.valueOf() | 0) !== 0) {
                      if (lerpType !== $T27().Slerp) {
                        throw $S0D().Construct("animTrackContainer.LerpType", (current2.LerpType).valueOf(), $T27().__Type__);
                      }
                      var lerpFunc = $T29().New($T1A(), function () { return $T1A().Float3QuaternionSlerp(arguments[0].MemberwiseClone(), arguments[1].MemberwiseClone(), arguments[2], arguments[3]); }.bind(this), function () { return JSIL.GetMethodInfo($asm04.Fusee.KeyFrameAnimation.Lerp, "Float3QuaternionSlerp", $S0E(), true); }.bind(this));
                    } else {
                      lerpFunc = $T29().New($T1A(), function () { return $T1A().Float3Lerp(arguments[0], arguments[1], arguments[2], arguments[3]); }.bind(this), function () { return JSIL.GetMethodInfo($asm04.Fusee.KeyFrameAnimation.Lerp, "Float3Lerp", $S0F(), true); }.bind(this));
                    }
                    var channel4 = $S10().Construct(lerpFunc);

                    for (var a$4 = current2.KeyFrames._items, i$4 = 0, l$4 = (current2.KeyFrames._size | 0); i$4 < l$4; ($temp04 = i$4, 
                        i$4 = ((i$4 + 1) | 0), 
                        $temp04)) {
                      var animationKeyContainerFloat3 = $T2B().$Cast(a$4[i$4]);
                      $T2A().prototype.AddKeyframe.call(channel4, new ($T2C())(animationKeyContainerFloat3.Time, animationKeyContainerFloat3.Value.MemberwiseClone()));
                    }
                    (this._animation).AddAnimation$b1($T0C())(channel4, current2.SceneComponent, current2.Property);
                  } else {
                    var flag6 = $S06().CallVirtual("IsAssignableFrom", null, $T2D().__Type__, keyType);
                    if (flag6) {
                      var channel5 = $S11().Construct($T2F().New($T1A(), function () { return $T1A().Float4Lerp(arguments[0], arguments[1], arguments[2], arguments[3]); }.bind(this), function () { return JSIL.GetMethodInfo($asm04.Fusee.KeyFrameAnimation.Lerp, "Float4Lerp", $S12(), true); }.bind(this)));

                      for (var a$5 = current2.KeyFrames._items, i$5 = 0, l$5 = (current2.KeyFrames._size | 0); i$5 < l$5; ($temp05 = i$5, 
                          i$5 = ((i$5 + 1) | 0), 
                          $temp05)) {
                        var animationKeyContainerFloat4 = $T30().$Cast(a$5[i$5]);
                        $T2E().prototype.AddKeyframe.call(channel5, new ($T31())(animationKeyContainerFloat4.Time, animationKeyContainerFloat4.Value.MemberwiseClone()));
                      }
                      (this._animation).AddAnimation$b1($T2D())(channel5, current2.SceneComponent, current2.Property);
                    }
                  }
                }
              }
            }
          }
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM03().Call(enumerator, null);
      }
    }
  }; 

  function SceneRenderer_InitState () {
    (this._state).Clear();
    (this._state.Model = $T34().Identity.MemberwiseClone());
    this._view = (this._rc).get_ModelView().MemberwiseClone();
    (this._state).set_Effect(this._defaultEffect);
  }; 

  function SceneRenderer_LoadTexture (path) {
    var filename = $T36().Combine(this._scenePathDirectory, path);
    var imgData = (this._rc).LoadImage(filename).MemberwiseClone();
    return (this._rc).CreateTexture(imgData.MemberwiseClone(), false);
  }; 

  function SceneRenderer_LookupMaterial (mc) {
    var shaderEffect = new JSIL.BoxedVariable(null);
    var flag = !(this._matMap).TryGetValue(mc, /* ref */ shaderEffect);
    if (flag) {
      shaderEffect.set(this.MakeMaterial(mc));
      (shaderEffect.get()).AttachToContext(this._rc);
      (this._matMap).Add(mc, shaderEffect.get());
    }
    return shaderEffect.get();
  }; 

  function SceneRenderer_MakeMaterial (mc) {
    var weights = $T3B().GetWeights(this.SceneVisitor$CurrentNode$value, 0);
    var shaderCodeBuilder = new ($T09())(mc, null, weights);
    var effectParameters = this.AssembleEffectParamers(mc, shaderCodeBuilder);
    var expr_26 = JSIL.Array.New($T3D(), 1);
    var effectPassDeclaration = new ($T3D())();
    effectPassDeclaration.VS = shaderCodeBuilder.get_VS();
    effectPassDeclaration.PS = shaderCodeBuilder.get_PS();
    var renderStateSet = new ($T3E())();
    renderStateSet.set_ZEnable(true);
    renderStateSet.set_AlphaBlendEnable(false);
    effectPassDeclaration.StateSet = renderStateSet;
    expr_26[0] = effectPassDeclaration.MemberwiseClone();
    return new ($T38())(expr_26, effectParameters);
  }; 

  function SceneRenderer_MakeMesh (mc) {
    var weights = $T3B().GetWeights(this.SceneVisitor$CurrentNode$value, 0);
    var flag = weights === null;
    if (flag) {
      var mesh = new ($T40())();
      mesh.set_Colors(null);
      mesh.set_Normals(mc.Normals);
      mesh.set_UVs(mc.UVs);
      mesh.set_Vertices(mc.Vertices);
      mesh.set_Triangles(mc.Triangles);
      var result = mesh;
    } else {
      var array = JSIL.Array.New($T2D(), (weights.WeightMap).get_Count());
      var array2 = JSIL.Array.New($T2D(), (weights.WeightMap).get_Count());

      for (var i = 0; i < ((weights.WeightMap).get_Count() | 0); ) {
        var num = ($T43().Min(4, ((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Count()) | 0);

        for (var j = 0; j < num; ) {
          switch (j) {
            case 0: 
              array[i].x = +((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).Weight;
              array2[i].x = +(((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).JointIndex);
              break;

            case 1: 
              array[i].y = +((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).Weight;
              array2[i].y = +(((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).JointIndex);
              break;

            case 2: 
              array[i].z = +((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).Weight;
              array2[i].z = +(((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).JointIndex);
              break;

            case 3: 
              array[i].w = +((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).Weight;
              array2[i].w = +(((weights.WeightMap).get_Item(i).VertexWeightList$VertexWeights$value).get_Item(j).JointIndex);
              break;

          }
          var num2 = j;
          j = ((num2 + 1) | 0);
        }
        (array[i].MemberwiseClone()).Normalize1();
        num2 = i;
        i = ((num2 + 1) | 0);
      }
      mesh = new ($T40())();
      mesh.set_Colors(null);
      mesh.set_Normals(mc.Normals);
      mesh.set_UVs(mc.UVs);
      mesh.set_BoneIndices(array2);
      mesh.set_BoneWeights(array);
      mesh.set_Vertices(mc.Vertices);
      mesh.set_Triangles(mc.Triangles);
      result = mesh;
    }
    return result;
  }; 

  function SceneRenderer_PopState () {
    (this._state).Pop();
    (this._rc.ModelView = $S13().CallStatic($T34(), "op_Multiply", null, this._view.MemberwiseClone(), (this._state).get_Model().MemberwiseClone()).MemberwiseClone());
  }; 

  function SceneRenderer_PushState () {
    (this._state).Push();
  }; 

  function SceneRenderer_Render (rc) {
    this.SetContext(rc);
    $S14().CallVirtual("Traverse", null, this, this._sc.Children);
  }; 

  function SceneRenderer_RenderBone (bone) {
    var float4x = new JSIL.BoxedVariable(new ($T34())());
    var currentNode = this.SceneVisitor$CurrentNode$value;
    var flag = !(this._boneMap).TryGetValue(currentNode, /* ref */ float4x);
    if (flag) {
      (this._boneMap).Add(currentNode, (this._rc).get_Model().MemberwiseClone());
    } else {
      (this._boneMap).set_Item(currentNode, (this._rc).get_Model().MemberwiseClone());
    }
  }; 

  function SceneRenderer_RenderMaterial (matComp) {
    var effect = this.LookupMaterial(matComp);
    (this._state).set_Effect(effect);
  }; 

  function SceneRenderer_RenderMesh (meshComponent) {
    var mesh = new JSIL.BoxedVariable(null);
    var flag = !(this._meshMap).TryGetValue(meshComponent, /* ref */ mesh);
    if (flag) {
      mesh.set(this.MakeMesh(meshComponent));
      (this._meshMap).Add(meshComponent, mesh.get());
    }
    var flag2 = ((this._state).get_Effect()).GetEffectParam($T09().get_LightDirectionName()) !== null;
    if (flag2) {
      this.RenderWithLights(mesh.get(), (this._state).get_Effect());
    } else {
      ((this._state).get_Effect()).RenderMesh(mesh.get());
    }
  }; 

  function SceneRenderer_RenderTransform (transform) {
    var state = this._state;
    (state.Model = $S13().CallStatic($T34(), "op_Multiply", null, 
        state.get_Model().MemberwiseClone(), 
        $T3B().Matrix(transform).MemberwiseClone()
      ).MemberwiseClone());
    (this._rc.Model = $S13().CallStatic($T34(), "op_Multiply", null, this._view.MemberwiseClone(), (this._state).get_Model().MemberwiseClone()).MemberwiseClone());
  }; 

  function SceneRenderer_RenderWeight (weight) {
    var array = JSIL.Array.New($T34(), $S15().CallStatic($T4C(), "Count$b1", [$asm06.Fusee.Serialization.SceneNodeContainer], weight.Joints));

    for (var i = 0; i < ($S15().CallStatic($T4C(), "Count$b1", [$asm06.Fusee.Serialization.SceneNodeContainer], weight.Joints) | 0); ) {
      var right = (weight.BindingMatrices).get_Item(i).MemberwiseClone();
      array[i] = $S13().CallStatic($T34(), "op_Multiply", null, (this._boneMap).get_Item((weight.Joints).get_Item(i)).MemberwiseClone(), right.MemberwiseClone()).MemberwiseClone();
      var num = i;
      i = ((num + 1) | 0);
    }
    (this._rc).set_Bones(array);
  }; 

  function SceneRenderer_RenderWithLights (rm, effect) {
    var $temp00;
    var flag = ((this._lights).get_Count() | 0) > 0;
    if (flag) {

      for (var a$0 = this._lights._items, i$0 = 0, l$0 = (this._lights._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        effect.RenderMesh(rm);
      }
    } else {
      effect.SetEffectParam($T09().get_LightColorName(), $S03().Construct(1, 1, 1));
      var xyz = ($S16().CallStatic($T34(), "op_Multiply", null, (this._rc).get_InvModelView(), $S17().Construct(0, 0, -1, 0))).get_xyz().MemberwiseClone();
      xyz.Normalize();
      effect.SetEffectParam($T09().get_LightDirectionName(), xyz.MemberwiseClone());
      effect.SetEffectParam($T09().get_LightIntensityName(), 1);
      effect.RenderMesh(rm);
    }
  }; 

  function SceneRenderer_SetContext (rc) {
    if (rc === null) {
      throw $S18().Construct("rc");
    }
    var flag2 = rc !== this._rc;
    if (flag2) {
      this._rc = rc;
      this._meshMap = $S19().Construct();
      this._matMap = $S1A().Construct();
      this._boneMap = $S1B().Construct();
      var materialComponent = new ($T08())();
      var arg_7A_0 = materialComponent;
      var matChannelContainer = new ($T51())();
      matChannelContainer.Color = $S03().Construct(0.5, 0.5, 0.5);
      arg_7A_0.Diffuse = matChannelContainer;
      var arg_BC_0 = materialComponent;
      var specularChannelContainer = new ($T52())();
      specularChannelContainer.Color = $S03().Construct(1, 1, 1);
      specularChannelContainer.Intensity = 0.5;
      specularChannelContainer.Shininess = 22;
      arg_BC_0.Specular = specularChannelContainer;
      this._defaultEffect = this.MakeMaterial(materialComponent);
      (this._defaultEffect).AttachToContext(this._rc);
    }
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), 
      Name: "Fusee.Engine.SimpleScene.SceneRenderer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("Fusee.Serialization.SceneContainer"), $.String]), 
      SceneRenderer__ctor
    );

    $.Method({Static:false, Public:true }, "Animate", 
      JSIL.MethodSignature.Void, 
      SceneRenderer_Animate
    );

    $.Method({Static:false, Public:false}, "AssembleEffectParamers", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.List`1", [$asm02.TypeRef("Fusee.Engine.EffectParameterDeclaration")]), [$asm06.TypeRef("Fusee.Serialization.MaterialComponent"), $asm03.TypeRef("Fusee.Engine.SimpleScene.ShaderCodeBuilder")]), 
      SceneRenderer_AssembleEffectParamers
    );

    $.Method({Static:false, Public:true }, "InitAnimations", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.SceneContainer")), 
      SceneRenderer_InitAnimations
    );

    $.Method({Static:false, Public:false, Virtual:true }, "InitState", 
      JSIL.MethodSignature.Void, 
      SceneRenderer_InitState
    );

    $.Method({Static:false, Public:false}, "LoadTexture", 
      new JSIL.MethodSignature($asm01.TypeRef("Fusee.Engine.ITexture"), [$.String]), 
      SceneRenderer_LoadTexture
    );

    $.Method({Static:false, Public:false}, "LookupMaterial", 
      new JSIL.MethodSignature($asm02.TypeRef("Fusee.Engine.ShaderEffect"), [$asm06.TypeRef("Fusee.Serialization.MaterialComponent")]), 
      SceneRenderer_LookupMaterial
    );

    $.Method({Static:false, Public:false}, "MakeMaterial", 
      new JSIL.MethodSignature($asm02.TypeRef("Fusee.Engine.ShaderEffect"), [$asm06.TypeRef("Fusee.Serialization.MaterialComponent")]), 
      SceneRenderer_MakeMaterial
    );

    $.Method({Static:false, Public:true }, "MakeMesh", 
      new JSIL.MethodSignature($asm02.TypeRef("Fusee.Engine.Mesh"), [$asm06.TypeRef("Fusee.Serialization.MeshComponent")]), 
      SceneRenderer_MakeMesh
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      SceneRenderer_PopState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      SceneRenderer_PushState
    );

    $.Method({Static:false, Public:true }, "Render", 
      JSIL.MethodSignature.Action($asm02.TypeRef("Fusee.Engine.RenderContext")), 
      SceneRenderer_Render
    );

    $.Method({Static:false, Public:true }, "RenderBone", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.BoneComponent")), 
      SceneRenderer_RenderBone
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true }, "RenderMaterial", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.MaterialComponent")), 
      SceneRenderer_RenderMaterial
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true }, "RenderMesh", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.MeshComponent")), 
      SceneRenderer_RenderMesh
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true }, "RenderTransform", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.TransformComponent")), 
      SceneRenderer_RenderTransform
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:true }, "RenderWeight", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.WeightComponent")), 
      SceneRenderer_RenderWeight
    )
      .Attribute($asm03.TypeRef("Fusee.Engine.SimpleScene.VisitMethodAttribute"));

    $.Method({Static:false, Public:false}, "RenderWithLights", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("Fusee.Engine.Mesh"), $asm02.TypeRef("Fusee.Engine.ShaderEffect")]), 
      SceneRenderer_RenderWithLights
    );

    $.Method({Static:false, Public:true }, "SetContext", 
      JSIL.MethodSignature.Action($asm02.TypeRef("Fusee.Engine.RenderContext")), 
      SceneRenderer_SetContext
    );

    $.Field({Static:false, Public:false}, "_meshMap", $asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Serialization.MeshComponent"), $asm02.TypeRef("Fusee.Engine.Mesh")]));

    $.Field({Static:false, Public:false}, "_matMap", $asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Serialization.MaterialComponent"), $asm02.TypeRef("Fusee.Engine.ShaderEffect")]));

    $.Field({Static:false, Public:false}, "_boneMap", $asm09.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"), $asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Field({Static:false, Public:false}, "_animation", $asm04.TypeRef("Fusee.KeyFrameAnimation.Animation"));

    $.Field({Static:false, Public:false}, "_sc", $asm06.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_rc", $asm02.TypeRef("Fusee.Engine.RenderContext"));

    $.Field({Static:false, Public:false}, "_lights", $asm09.TypeRef("System.Collections.Generic.List`1", [$asm03.TypeRef("Fusee.Engine.SimpleScene.LightInfo")]));

    $.Field({Static:false, Public:false}, "_scenePathDirectory", $.String);

    $.Field({Static:false, Public:false}, "_defaultEffect", $asm02.TypeRef("Fusee.Engine.ShaderEffect"));

    $.Field({Static:false, Public:false}, "_state", $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneRenderer+RendererState"));

    $.Field({Static:false, Public:false}, "_view", $asm05.TypeRef("Fusee.Math.float4x4"));


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneRenderer+RendererState */ 

(function RendererState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.CollapsingStateStack$b1.Of($asm05.Fusee.Math.float4x4))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.StateStack$b1.Of($asm02.Fusee.Engine.ShaderEffect))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitorState)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.Fusee.Engine.ShaderEffect)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };


  function RendererState__ctor () {
    this._model = new ($T00())(4);
    this._effect = new ($T01())(8);
    $T02().prototype._ctor.call(this);
    this.RegisterState(this._model);
    this.RegisterState(this._effect);
  }; 

  function RendererState_get_Effect () {
    return (this._effect).get_Tos();
  }; 

  function RendererState_get_Model () {
    return (this._model).get_Tos();
  }; 

  function RendererState_set_Effect (value) {
    (this._effect).set_Tos(value);
  }; 

  function RendererState_set_Model (value) {
    (this._model).set_Tos(value.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.VisitorState"), 
      Name: "Fusee.Engine.SimpleScene.SceneRenderer+RendererState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RendererState__ctor
    );

    $.Method({Static:false, Public:true }, "get_Effect", 
      JSIL.MethodSignature.Return($asm02.TypeRef("Fusee.Engine.ShaderEffect")), 
      RendererState_get_Effect
    );

    $.Method({Static:false, Public:true }, "get_Model", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      RendererState_get_Model
    );

    $.Method({Static:false, Public:true }, "set_Effect", 
      JSIL.MethodSignature.Action($asm02.TypeRef("Fusee.Engine.ShaderEffect")), 
      RendererState_set_Effect
    );

    $.Method({Static:false, Public:true }, "set_Model", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      RendererState_set_Model
    );

    $.Field({Static:false, Public:false}, "_model", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Field({Static:false, Public:false}, "_effect", $asm03.TypeRef("Fusee.Engine.SimpleScene.StateStack`1", [$asm02.TypeRef("Fusee.Engine.ShaderEffect")]));

    $.Property({Static:false, Public:true }, "Model", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.Property({Static:false, Public:true }, "Effect", $asm02.TypeRef("Fusee.Engine.ShaderEffect"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.SceneRenderer+<>c */ 

(function $l$gc$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.AnimationComponent)) ();
  };


  function $l$gc__ctor () {
  }; 

  function $l$gc_$lInitAnimations$gb__13_0 (c) {
    return true;
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneRenderer+<>c", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__ctor
    );

    $.Method({Static:false, Public:false}, "$lInitAnimations$gb__13_0", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("Fusee.Serialization.AnimationComponent")]), 
      $l$gc_$lInitAnimations$gb__13_0
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "$l$g9", $.Type);

    $.Field({Static:true , Public:true }, "$l$g9__13_0", $asm09.TypeRef("System.Predicate`1", [$asm06.TypeRef("Fusee.Serialization.AnimationComponent")]));


    function $l$gc__cctor () {
      $thisType.$l$g9 = new $thisType();
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Engine.SimpleScene.VisitMethodAttribute */ 

(function VisitMethodAttribute$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Attribute)) ();
  };


  function VisitMethodAttribute__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Attribute"), 
      Name: "Fusee.Engine.SimpleScene.VisitMethodAttribute", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      VisitMethodAttribute__ctor
    );

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm09.System.AttributeTargets.Method]; });

})();

/* class Fusee.Engine.SimpleScene.SceneVisitorHelpers */ 

(function SceneVisitorHelpers$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_$lSingleRootEnum$gd__2)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers_$lSingleRootEnumerable$gd__3)) ();
  };


  function SceneVisitorHelpers_SingleRootEnum (root) {
    var expr_06 = new ($T01())(0);
    expr_06.root = root;
    return expr_06;
  }; 

  function SceneVisitorHelpers_SingleRootEnumerable (root) {
    var expr_07 = new ($T02())(-2);
    expr_07.$l$g3__root = root;
    return expr_07;
  }; 

  JSIL.MakeStaticClass("Fusee.Engine.SimpleScene.SceneVisitorHelpers", false, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:false}, "SingleRootEnum", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      SceneVisitorHelpers_SingleRootEnum
    );

    $.Method({Static:true , Public:false}, "SingleRootEnumerable", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      SceneVisitorHelpers_SingleRootEnumerable
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitNodeMethod */ 

JSIL.MakeDelegate("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitNodeMethod", false, [], 
  new JSIL.MethodSignature(null, [$asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

/* delegate Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitComponentMethod */ 

JSIL.MakeDelegate("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitComponentMethod", false, [], 
  new JSIL.MethodSignature(null, [$asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), $asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]));

/* class Fusee.Engine.SimpleScene.SceneVisitorHelpers+<SingleRootEnum>d__2 */ 

(function $lSingleRootEnum$gd__2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.NotSupportedException"), null))) ();
  };


  function $lSingleRootEnum$gd__2__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
  }; 

  function $lSingleRootEnum$gd__2_MoveNext () {
    var num = (this.$l$g1__state | 0);
    if (num === 0) {
      this.$l$g1__state = -1;
      this.$l$g2__current = this.root;
      this.$l$g1__state = 1;
      return true;
    }
    if (num !== 1) {
      return false;
    }
    this.$l$g1__state = -1;
    return false;
  }; 

  function $lSingleRootEnum$gd__2_System_Collections_Generic_IEnumerator$lFusee_Serialization_SceneNodeContainer$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lSingleRootEnum$gd__2_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lSingleRootEnum$gd__2_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lSingleRootEnum$gd__2_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneVisitorHelpers+<SingleRootEnum>d__2", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lSingleRootEnum$gd__2__ctor
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lSingleRootEnum$gd__2_MoveNext
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Serialization.SceneNodeContainer$g.get_Current", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      $lSingleRootEnum$gd__2_System_Collections_Generic_IEnumerator$lFusee_Serialization_SceneNodeContainer$g_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lSingleRootEnum$gd__2_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lSingleRootEnum$gd__2_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lSingleRootEnum$gd__2_System_IDisposable_Dispose
    )
      .Overrides($asm09.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:true }, "root", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Serialization.SceneNodeContainer$g.Current", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      /* 1 */ $asm09.TypeRef("System.IDisposable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Engine.SimpleScene.SceneVisitorHelpers+<SingleRootEnumerable>d__3 */ 

(function $lSingleRootEnumerable$gd__3$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Threading.Thread)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.NotSupportedException"), null))) ();
  };


  function $lSingleRootEnumerable$gd__3__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01().get_CurrentThread().get_ManagedThreadId() | 0);
  }; 

  function $lSingleRootEnumerable$gd__3_MoveNext () {
    var num = (this.$l$g1__state | 0);
    if (num === 0) {
      this.$l$g1__state = -1;
      this.$l$g2__current = this.root;
      this.$l$g1__state = 1;
      return true;
    }
    if (num !== 1) {
      return false;
    }
    this.$l$g1__state = -1;
    return false;
  }; 

  function $lSingleRootEnumerable$gd__3_System_Collections_Generic_IEnumerable$lFusee_Serialization_SceneNodeContainer$g_GetEnumerator () {
    if (!(((this.$l$g1__state | 0) !== -2) || ((this.$l$gl__initialThreadId | 0) !== ($T01().get_CurrentThread().get_ManagedThreadId() | 0)))) {
      this.$l$g1__state = 0;
      var $lSingleRootEnumerable$gd__ = this;
    } else {
      $lSingleRootEnumerable$gd__ = new $thisType(0);
    }
    $lSingleRootEnumerable$gd__.root = this.$l$g3__root;
    return $lSingleRootEnumerable$gd__;
  }; 

  function $lSingleRootEnumerable$gd__3_System_Collections_Generic_IEnumerator$lFusee_Serialization_SceneNodeContainer$g_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lSingleRootEnumerable$gd__3_System_Collections_IEnumerable_GetEnumerator () {
    return this.System_Collections_Generic_IEnumerable$lFusee_Serialization_SceneNodeContainer$g_GetEnumerator();
  }; 

  function $lSingleRootEnumerable$gd__3_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  }; 

  function $lSingleRootEnumerable$gd__3_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  }; 

  function $lSingleRootEnumerable$gd__3_System_IDisposable_Dispose () {
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.SceneVisitorHelpers+<SingleRootEnumerable>d__3", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lSingleRootEnumerable$gd__3__ctor
    )
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lSingleRootEnumerable$gd__3_MoveNext
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lFusee.Serialization.SceneNodeContainer$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])), 
      $lSingleRootEnumerable$gd__3_System_Collections_Generic_IEnumerable$lFusee_Serialization_SceneNodeContainer$g_GetEnumerator
    )
      .Overrides($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Serialization.SceneNodeContainer$g.get_Current", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")), 
      $lSingleRootEnumerable$gd__3_System_Collections_Generic_IEnumerator$lFusee_Serialization_SceneNodeContainer$g_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm09.TypeRef("System.Collections.IEnumerator")), 
      $lSingleRootEnumerable$gd__3_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lSingleRootEnumerable$gd__3_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lSingleRootEnumerable$gd__3_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lSingleRootEnumerable$gd__3_System_IDisposable_Dispose
    )
      .Overrides($asm09.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32);

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32);

    $.Field({Static:false, Public:false}, "root", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Field({Static:false, Public:true }, "$l$g3__root", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lFusee.Serialization.SceneNodeContainer$g.Current", $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      /* 3 */ $asm09.TypeRef("System.IDisposable"), 
      /* 4 */ $asm09.TypeRef("System.Collections.IEnumerator")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Engine.SimpleScene.VisitorCallerFactory */ 

(function VisitorCallerFactory$Members () {
  var $, $thisType;

  function VisitorCallerFactory__ctor () {
  }; 



  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.VisitorCallerFactory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      VisitorCallerFactory__ctor
    );

    $.ExternalMethod({Static:true , Public:true }, "MakeComponentVisitor", 
      new JSIL.MethodSignature($asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitComponentMethod"), [$asm09.TypeRef("System.Reflection.MethodInfo")])
    );

    $.ExternalMethod({Static:true , Public:true }, "MakeNodeVistor", 
      new JSIL.MethodSignature($asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitorHelpers+VisitNodeMethod"), [$asm09.TypeRef("System.Reflection.MethodInfo")])
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.VisitorCallerFactory+<>c__DisplayClass0_0 */ 

(function $l$gc__DisplayClass0_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Serialization.SceneComponentContainer)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Reflection.MethodBase)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.Object)) ();
  };


  function $l$gc__DisplayClass0_0__ctor () {
  }; 

  function $l$gc__DisplayClass0_0_$lMakeComponentVisitor$gb__0 (visitor, component) {
    (this.info).Invoke(visitor, JSIL.Array.New($T03(), [component]));
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.VisitorCallerFactory+<>c__DisplayClass0_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass0_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lMakeComponentVisitor$gb__0", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), $asm06.TypeRef("Fusee.Serialization.SceneComponentContainer")]), 
      $l$gc__DisplayClass0_0_$lMakeComponentVisitor$gb__0
    );

    $.Field({Static:false, Public:true }, "info", $asm09.TypeRef("System.Reflection.MethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Engine.SimpleScene.VisitorCallerFactory+<>c__DisplayClass1_0 */ 

(function $l$gc__DisplayClass1_0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitor)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Reflection.MethodBase)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.Object)) ();
  };


  function $l$gc__DisplayClass1_0__ctor () {
  }; 

  function $l$gc__DisplayClass1_0_$lMakeNodeVistor$gb__0 (visitor, node) {
    (this.info).Invoke(visitor, JSIL.Array.New($T03(), [node]));
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.VisitorCallerFactory+<>c__DisplayClass1_0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass1_0__ctor
    );

    $.Method({Static:false, Public:false}, "$lMakeNodeVistor$gb__0", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Fusee.Engine.SimpleScene.SceneVisitor"), $asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]), 
      $l$gc__DisplayClass1_0_$lMakeNodeVistor$gb__0
    );

    $.Field({Static:false, Public:true }, "info", $asm09.TypeRef("System.Reflection.MethodInfo"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Fusee.Engine.SimpleScene.ShaderCodeBuilder */ 

(function ShaderCodeBuilder$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.Fusee.Serialization.MaterialComponent)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Serialization.MeshComponent)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.Fusee.Serialization.WeightComponent)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.Collections.Generic.List$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm09.System.Text.StringBuilder)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm09.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm09.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm09.System.String)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm05.Fusee.Math.float3))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm05.Fusee.Math.float2))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.Text.StringBuilder"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm09.TypeRef("System.Text.StringBuilder"), [$asm09.TypeRef("System.String")]))) ();
  };


  function ShaderCodeBuilder__ctor (mc, mesh, wc) {
    if (wc !== null) {
      this._hasWeightMap = true;
      this._nBones = ((wc.Joints).get_Count() | 0);
    } else {
      this._nBones = 0;
    }
    JSIL.GetType(1);
    this._normalizeNormals = true;
    if (mesh !== null) {
      this.AnalyzeMesh(mesh);
    } else {
      this._hasVertices = this._hasNormals = this._hasUVs = true;
    }
    this.AnalyzeMaterial(mc);
    var stringBuilder = $S00().Construct();
    this.MeshInputDeclarations(stringBuilder);
    this.MatrixDeclarations(stringBuilder);
    this.VSBody(stringBuilder);
    this._vs = stringBuilder.toString();
    var stringBuilder2 = $S00().Construct();
    this.PixelInputDeclarations(stringBuilder2);
    this.PSBody(stringBuilder2);
    this._ps = stringBuilder2.toString();
  }; 

  function ShaderCodeBuilder_AddCameraVec (ps) {
    if (this._hasSpecular) {
      $S01().CallVirtual("Append", null, ps, "    vec3 Camera = vViewDir;\n");
    }
  }; 

  function ShaderCodeBuilder_AddChannelBaseColorCalculation (ps, hasChannelTexture, channelName) {
    if (!hasChannelTexture || !this._hasUVs) {
      $S01().CallVirtual("Append", null, ps, "    vec3 ");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "BaseColor = ");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "Color;\n");
    } else {
      $S01().CallVirtual("Append", null, ps, "    vec3 ");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "BaseColor = ");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "Color * (1.0 - ");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "Mix) + texture2D(");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "Texture, vUV).rgb * ");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "Mix;\n");
    }
  }; 

  function ShaderCodeBuilder_AddDiffuseChannel (ps) {
    if (this._hasDiffuse) {
      $S01().CallVirtual("Append", null, ps, "\n\n    //*********** DIFFUSE *********\n");
      this.AddChannelBaseColorCalculation(ps, this._hasDiffuseTexture, "Diffuse");
      $S01().CallVirtual("Append", null, ps, "    float diffFactor = dot(LDir, Normal);\n");
      $S01().CallVirtual("Append", null, ps, "    result += DiffuseBaseColor * LColor * LIntensity * max(diffFactor, 0.0);\n");
    }
  }; 

  function ShaderCodeBuilder_AddEmissiveChannel (ps) {
    if (this._hasEmissive) {
      $S01().CallVirtual("Append", null, ps, "\n\n    //*********** EMISSIVE *********\n");
      this.AddChannelBaseColorCalculation(ps, this._hasEmissiveTexture, "Emissive");
      $S01().CallVirtual("Append", null, ps, "    result += EmissiveBaseColor;\n");
    }
  }; 

  function ShaderCodeBuilder_AddLightVec (ps) {
    if (this._hasDiffuse || this._hasSpecular) {
      $S01().CallVirtual("Append", null, ps, "    vec3 LDir = ");
      $S01().CallVirtual("Append", null, ps, $thisType.get_LightDirectionName());
      $S01().CallVirtual("Append", null, ps, ";\n");
      $S01().CallVirtual("Append", null, ps, "    vec3 LColor = ");
      $S01().CallVirtual("Append", null, ps, $thisType.get_LightColorName());
      $S01().CallVirtual("Append", null, ps, ";\n");
      $S01().CallVirtual("Append", null, ps, "    float LIntensity = ");
      $S01().CallVirtual("Append", null, ps, $thisType.get_LightIntensityName());
      $S01().CallVirtual("Append", null, ps, ";\n");
    }
  }; 

  function ShaderCodeBuilder_AddNormalVec (ps) {
    var hasBump = this._hasBump;
    if (hasBump) {
      $S01().CallVirtual("Append", null, ps, "\n\n    //*********** BUMP *********\n");
      $S01().CallVirtual("Append", null, ps, "    vec3 bv =  normalize(texture2D(BumpTexture, vUV).xyz * 2.0 - 1.0);\n");
      $S01().CallVirtual("Append", null, ps, "    bv = vec3(bv.x, bv.y, -bv.z);\n");
      $S01().CallVirtual("Append", null, ps, "    vec3 Normal =  normalize(bv);\n\n");
    } else {
      $S01().CallVirtual("Append", null, ps, "    vec3 Normal = normalize(vNormal);\n");
    }
  }; 

  function ShaderCodeBuilder_AddSpecularChannel (ps) {
    if (this._hasSpecular) {
      $S01().CallVirtual("Append", null, ps, "\n\n    //*********** SPECULAR *********\n");
      if (!this._hasDiffuse) {
        $S01().CallVirtual("Append", null, ps, "    float diffFactor = dot(LDir, Normal);\n");
      }
      $S01().CallVirtual("Append", null, ps, "    if (diffFactor > 0.0) {\n  ");
      this.AddChannelBaseColorCalculation(ps, this._hasSpecularTexture, "Specular");
      $S01().CallVirtual("Append", null, ps, "      vec3 h = normalize(LDir + Camera);\n");
      $S01().CallVirtual("Append", null, ps, "      result += SpecularBaseColor * LColor * LIntensity * SpecularIntensity * pow(max(0.0, dot(h, Normal)), SpecularShininess);\n");
      $S01().CallVirtual("Append", null, ps, "    }\n");
    }
  }; 

  function ShaderCodeBuilder_AnalyzeMaterial (mc) {
    this._hasDiffuse = mc.get_HasDiffuse();
    var hasDiffuse = this._hasDiffuse;
    if (hasDiffuse) {
      this._hasDiffuseTexture = mc.Diffuse.Texture !== null;
    }
    this._hasSpecular = mc.get_HasSpecular();
    var hasSpecular = this._hasSpecular;
    if (hasSpecular) {
      this._hasSpecularTexture = mc.Specular.Texture !== null;
    }
    this._hasEmissive = mc.get_HasEmissive();
    var hasEmissive = this._hasEmissive;
    if (hasEmissive) {
      this._hasEmissiveTexture = mc.Emissive.Texture !== null;
    }
    this._hasBump = mc.get_HasBump();
  }; 

  function ShaderCodeBuilder_AnalyzeMesh (mesh) {
    this._hasVertices = (mesh.Vertices !== null) && 
    ((mesh.Vertices.length | 0) > 0);
    this._hasNormals = (mesh.Normals !== null) && 
    ((mesh.Normals.length | 0) > 0);
    this._hasUVs = (mesh.UVs !== null) && 
    ((mesh.UVs.length | 0) > 0);
    this._hasColors = false;
  }; 

  function ShaderCodeBuilder_BumpInputDeclaration (ps) {
    if (this._hasBump) {
      $S01().CallVirtual("Append", null, ps, "  uniform sampler2D BumpTexture;\n");
      $S01().CallVirtual("Append", null, ps, "  uniform float BumpIntensity;\n\n");
    }
  }; 

  function ShaderCodeBuilder_ChannelInputDeclaration (ps, hasChannel, hasChannelTexture, channelName) {
    if (hasChannel) {
      $S01().CallVirtual("Append", null, ps, "  uniform vec3 ");
      $S01().CallVirtual("Append", null, ps, channelName);
      $S01().CallVirtual("Append", null, ps, "Color;\n");
      var flag2 = !hasChannelTexture;
      if (!flag2) {
        $S01().CallVirtual("Append", null, ps, "  uniform sampler2D ");
        $S01().CallVirtual("Append", null, ps, channelName);
        $S01().CallVirtual("Append", null, ps, "Texture;\n");
        $S01().CallVirtual("Append", null, ps, "  uniform float ");
        $S01().CallVirtual("Append", null, ps, channelName);
        $S01().CallVirtual("Append", null, ps, "Mix;\n\n");
      }
    }
  }; 

  function ShaderCodeBuilder_get_BumpIntensityName () {
    return (
      this._hasBump
         ? "BumpIntensity"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_BumpTextureName () {
    return (
      this._hasBump
         ? "BumpTexture"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_DiffuseColorName () {
    return (
      this._hasDiffuse
         ? "DiffuseColor"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_DiffuseMixName () {
    return (
      this._hasDiffuse
         ? "DiffuseMix"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_DiffuseTextureName () {
    return (
      this._hasDiffuseTexture
         ? "DiffuseTexture"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_EmissiveColorName () {
    return (
      this._hasEmissive
         ? "EmissiveColor"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_EmissiveMixName () {
    return (
      this._hasEmissive
         ? "EmissiveMix"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_EmissiveTextureName () {
    return (
      this._hasEmissiveTexture
         ? "EmissiveTexture"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_LightColorName () {
    return "LightColor";
  }; 

  function ShaderCodeBuilder_get_LightDirectionName () {
    return "LightDirection";
  }; 

  function ShaderCodeBuilder_get_LightIntensityName () {
    return "LightIntensity";
  }; 

  function ShaderCodeBuilder_get_PS () {
    return this._ps;
  }; 

  function ShaderCodeBuilder_get_SpecularColorName () {
    return (
      this._hasSpecular
         ? "SpecularColor"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_SpecularIntensityName () {
    return (
      this._hasSpecular
         ? "SpecularIntensity"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_SpecularMixName () {
    return (
      this._hasSpecular
         ? "SpecularMix"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_SpecularShininessName () {
    return (
      this._hasSpecular
         ? "SpecularShininess"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_SpecularTextureName () {
    return (
      this._hasSpecularTexture
         ? "SpecularTexture"
         : null)
    ;
  }; 

  function ShaderCodeBuilder_get_VS () {
    return this._vs;
  }; 

  function ShaderCodeBuilder_MatrixDeclarations (vs) {
    var hasSpecular = this._hasSpecular;
    if (hasSpecular) {
      $S01().CallVirtual("Append", null, vs, "  uniform mat4 FUSEE_IMV;\n");
    }
    var hasWeightMap = this._hasWeightMap;
    if (hasWeightMap) {
      $S01().CallVirtual("Append", null, vs, "uniform mat4 FUSEE_P;\n");
      $S01().CallVirtual("Append", null, vs, "uniform mat4 FUSEE_V;\n");
    } else {
      $S01().CallVirtual("Append", null, vs, "  uniform mat4 FUSEE_MVP;\n");
    }
    var hasWeightMap2 = this._hasWeightMap;
    if (hasWeightMap2) {
      $S01().CallVirtual("Append", null, vs, JSIL.ConcatString("  uniform mat4 FUSEE_BONES[", this._nBones, "];\n"));
    }
  }; 

  function ShaderCodeBuilder_MeshInputDeclarations (vs) {
    var hasVertices = this._hasVertices;
    if (hasVertices) {
      $S01().CallVirtual("Append", null, vs, "  attribute vec3 fuVertex;\n");
      var hasSpecular = this._hasSpecular;
      if (hasSpecular) {
        $S01().CallVirtual("Append", null, vs, "  varying vec3 vViewDir;\n");
      }
    }
    var hasWeightMap = this._hasWeightMap;
    if (hasWeightMap) {
      $S01().CallVirtual("Append", null, vs, "  attribute vec4 fuBoneIndex;\n");
      $S01().CallVirtual("Append", null, vs, "  attribute vec4 fuBoneWeight;\n");
    }
    var hasNormals = this._hasNormals;
    if (hasNormals) {
      $S01().CallVirtual("Append", null, vs, "  attribute vec3 fuNormal;\n  varying vec3 vNormal;\n");
    }
    var hasUVs = this._hasUVs;
    if (hasUVs) {
      $S01().CallVirtual("Append", null, vs, "  attribute vec2 fuUV;\n  varying vec2 vUV;\n");
    }
    var hasColors = this._hasColors;
    if (hasColors) {
      $S01().CallVirtual("Append", null, vs, "  attribute vec4 fuColor;\n  varying vec4 vColors;\n");
    }
  }; 

  function ShaderCodeBuilder_PixelInputDeclarations (ps) {
    $S01().CallVirtual("Append", null, ps, "#ifdef GL_ES\n");
    $S01().CallVirtual("Append", null, ps, "  precision highp float;\n");
    $S01().CallVirtual("Append", null, ps, "#endif\n\n");
    this.ChannelInputDeclaration(ps, this._hasDiffuse, this._hasDiffuseTexture, "Diffuse");
    this.SpecularInputDeclaration(ps);
    this.ChannelInputDeclaration(ps, this._hasEmissive, this._hasEmissiveTexture, "Emissive");
    this.BumpInputDeclaration(ps);
    if (this._hasSpecular || this._hasDiffuse) {
      $S01().CallVirtual("Append", null, ps, "  uniform vec3 ");
      $S01().CallVirtual("Append", null, ps, $thisType.get_LightColorName());
      $S01().CallVirtual("Append", null, ps, ";\n");
      $S01().CallVirtual("Append", null, ps, "  uniform float ");
      $S01().CallVirtual("Append", null, ps, $thisType.get_LightIntensityName());
      $S01().CallVirtual("Append", null, ps, ";\n");
      $S01().CallVirtual("Append", null, ps, "  uniform vec3 ");
      $S01().CallVirtual("Append", null, ps, $thisType.get_LightDirectionName());
      $S01().CallVirtual("Append", null, ps, ";\n");
    }
    var hasSpecular = this._hasSpecular;
    if (hasSpecular) {
      $S01().CallVirtual("Append", null, ps, "  varying vec3 vViewDir;\n");
    }
    var hasNormals = this._hasNormals;
    if (hasNormals) {
      $S01().CallVirtual("Append", null, ps, "  varying vec3 vNormal;\n");
    }
    var hasUVs = this._hasUVs;
    if (hasUVs) {
      $S01().CallVirtual("Append", null, ps, "  varying vec2 vUV;\n");
    }
  }; 

  function ShaderCodeBuilder_PSBody (ps) {
    $S01().CallVirtual("Append", null, ps, "\n\n  void main()\n  {\n");
    $S01().CallVirtual("Append", null, ps, "    vec3 result = vec3(0, 0, 0);\n\n");
    this.AddNormalVec(ps);
    this.AddCameraVec(ps);
    this.AddLightVec(ps);
    this.AddEmissiveChannel(ps);
    this.AddDiffuseChannel(ps);
    this.AddSpecularChannel(ps);
    $S01().CallVirtual("Append", null, ps, "\n    gl_FragColor = vec4(result, 1.0);\n");
    $S01().CallVirtual("Append", null, ps, "  }\n\n");
  }; 

  function ShaderCodeBuilder_SpecularInputDeclaration (ps) {
    if (this._hasSpecular) {
      this.ChannelInputDeclaration(ps, this._hasSpecular, this._hasSpecularTexture, "Specular");
      $S01().CallVirtual("Append", null, ps, "  uniform float SpecularShininess;\n");
      $S01().CallVirtual("Append", null, ps, "  uniform float SpecularIntensity;\n\n");
    }
  }; 

  function ShaderCodeBuilder_VSBody (vs) {
    $S01().CallVirtual("Append", null, vs, "\n\n  void main()\n  {\n");
    var hasNormals = this._hasNormals;
    if (hasNormals) {
      var hasWeightMap = this._hasWeightMap;
      if (hasWeightMap) {
        $S01().CallVirtual("Append", null, vs, "    vec4 newVertex;\n");
        $S01().CallVirtual("Append", null, vs, "    vec4 newNormal;\n");
        $S01().CallVirtual("Append", null, vs, "    newVertex = (FUSEE_BONES[int(fuBoneIndex.x)] * vec4(fuVertex, 1.0) ) * fuBoneWeight.x ;\n");
        $S01().CallVirtual("Append", null, vs, "    newNormal = (FUSEE_BONES[int(fuBoneIndex.x)] * vec4(fuNormal, 0.0)) * fuBoneWeight.x;\n");
        $S01().CallVirtual("Append", null, vs, "    newVertex = (FUSEE_BONES[int(fuBoneIndex.y)] * vec4(fuVertex, 1.0)) * fuBoneWeight.y + newVertex;\n");
        $S01().CallVirtual("Append", null, vs, "    newNormal = (FUSEE_BONES[int(fuBoneIndex.y)] * vec4(fuNormal, 0.0)) * fuBoneWeight.y + newNormal;\n");
        $S01().CallVirtual("Append", null, vs, "    newVertex = (FUSEE_BONES[int(fuBoneIndex.z)] * vec4(fuVertex, 1.0)) * fuBoneWeight.z + newVertex;\n");
        $S01().CallVirtual("Append", null, vs, "    newNormal = (FUSEE_BONES[int(fuBoneIndex.z)] * vec4(fuNormal, 0.0)) * fuBoneWeight.z + newNormal;\n");
        $S01().CallVirtual("Append", null, vs, "    newVertex = (FUSEE_BONES[int(fuBoneIndex.w)] * vec4(fuVertex, 1.0)) * fuBoneWeight.w + newVertex;\n");
        $S01().CallVirtual("Append", null, vs, "    newNormal = (FUSEE_BONES[int(fuBoneIndex.w)] * vec4(fuNormal, 0.0)) * fuBoneWeight.w + newNormal;\n");
        $S01().CallVirtual("Append", null, vs, "    vNormal = vec3(FUSEE_IMV * newNormal);\n");
        var normalizeNormals = this._normalizeNormals;
        if (normalizeNormals) {
          $S01().CallVirtual("Append", null, vs, "    vNormal = normalize(vNormal);\n");
        }
      } else {
        var normalizeNormals2 = this._normalizeNormals;
        if (normalizeNormals2) {
          $S01().CallVirtual("Append", null, vs, "    vNormal = normalize(fuNormal);\n");
        } else {
          $S01().CallVirtual("Append", null, vs, "    vNormal = fuNormal;\n");
        }
      }
    }
    var hasSpecular = this._hasSpecular;
    if (hasSpecular) {
      $S01().CallVirtual("Append", null, vs, "    vec3 viewPos = FUSEE_IMV[3].xyz;\n");
      var hasWeightMap2 = this._hasWeightMap;
      if (hasWeightMap2) {
        $S01().CallVirtual("Append", null, vs, "    vViewDir = normalize(viewPos - vec3(newVertex));\n");
      } else {
        $S01().CallVirtual("Append", null, vs, "    vViewDir = normalize(viewPos - fuVertex);\n");
      }
    }
    var hasWeightMap3 = this._hasWeightMap;
    if (hasWeightMap3) {
      $S01().CallVirtual("Append", null, vs, "    gl_Position = FUSEE_P * FUSEE_V * vec4(vec3(newVertex), 1.0);\n ");
    } else {
      $S01().CallVirtual("Append", null, vs, "    gl_Position = FUSEE_MVP * vec4(fuVertex, 1.0);\n");
    }
    var hasUVs = this._hasUVs;
    if (hasUVs) {
      $S01().CallVirtual("Append", null, vs, "    vUV = fuUV;\n");
    }
    $S01().CallVirtual("Append", null, vs, "  }\n\n");
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.ShaderCodeBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("Fusee.Serialization.MaterialComponent"), $asm06.TypeRef("Fusee.Serialization.MeshComponent"), 
          $asm06.TypeRef("Fusee.Serialization.WeightComponent")
        ]), 
      ShaderCodeBuilder__ctor
    );

    $.Method({Static:false, Public:false}, "AddCameraVec", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_AddCameraVec
    );

    $.Method({Static:false, Public:false}, "AddChannelBaseColorCalculation", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("System.Text.StringBuilder"), $.Boolean, 
          $.String
        ]), 
      ShaderCodeBuilder_AddChannelBaseColorCalculation
    );

    $.Method({Static:false, Public:false}, "AddDiffuseChannel", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_AddDiffuseChannel
    );

    $.Method({Static:false, Public:false}, "AddEmissiveChannel", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_AddEmissiveChannel
    );

    $.Method({Static:false, Public:false}, "AddLightVec", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_AddLightVec
    );

    $.Method({Static:false, Public:false}, "AddNormalVec", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_AddNormalVec
    );

    $.Method({Static:false, Public:false}, "AddSpecularChannel", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_AddSpecularChannel
    );

    $.Method({Static:false, Public:false}, "AnalyzeMaterial", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.MaterialComponent")), 
      ShaderCodeBuilder_AnalyzeMaterial
    );

    $.Method({Static:false, Public:false}, "AnalyzeMesh", 
      JSIL.MethodSignature.Action($asm06.TypeRef("Fusee.Serialization.MeshComponent")), 
      ShaderCodeBuilder_AnalyzeMesh
    );

    $.Method({Static:false, Public:false}, "BumpInputDeclaration", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_BumpInputDeclaration
    );

    $.Method({Static:false, Public:false}, "ChannelInputDeclaration", 
      new JSIL.MethodSignature(null, [
          $asm09.TypeRef("System.Text.StringBuilder"), $.Boolean, 
          $.Boolean, $.String
        ]), 
      ShaderCodeBuilder_ChannelInputDeclaration
    );

    $.Method({Static:false, Public:true }, "get_BumpIntensityName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_BumpIntensityName
    );

    $.Method({Static:false, Public:true }, "get_BumpTextureName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_BumpTextureName
    );

    $.Method({Static:false, Public:true }, "get_DiffuseColorName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_DiffuseColorName
    );

    $.Method({Static:false, Public:true }, "get_DiffuseMixName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_DiffuseMixName
    );

    $.Method({Static:false, Public:true }, "get_DiffuseTextureName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_DiffuseTextureName
    );

    $.Method({Static:false, Public:true }, "get_EmissiveColorName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_EmissiveColorName
    );

    $.Method({Static:false, Public:true }, "get_EmissiveMixName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_EmissiveMixName
    );

    $.Method({Static:false, Public:true }, "get_EmissiveTextureName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_EmissiveTextureName
    );

    $.Method({Static:true , Public:true }, "get_LightColorName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_LightColorName
    );

    $.Method({Static:true , Public:true }, "get_LightDirectionName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_LightDirectionName
    );

    $.Method({Static:true , Public:true }, "get_LightIntensityName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_LightIntensityName
    );

    $.Method({Static:false, Public:true }, "get_PS", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_PS
    );

    $.Method({Static:false, Public:true }, "get_SpecularColorName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_SpecularColorName
    );

    $.Method({Static:false, Public:true }, "get_SpecularIntensityName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_SpecularIntensityName
    );

    $.Method({Static:false, Public:true }, "get_SpecularMixName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_SpecularMixName
    );

    $.Method({Static:false, Public:true }, "get_SpecularShininessName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_SpecularShininessName
    );

    $.Method({Static:false, Public:true }, "get_SpecularTextureName", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_SpecularTextureName
    );

    $.Method({Static:false, Public:true }, "get_VS", 
      JSIL.MethodSignature.Return($.String), 
      ShaderCodeBuilder_get_VS
    );

    $.Method({Static:false, Public:false}, "MatrixDeclarations", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_MatrixDeclarations
    );

    $.Method({Static:false, Public:false}, "MeshInputDeclarations", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_MeshInputDeclarations
    );

    $.Method({Static:false, Public:false}, "PixelInputDeclarations", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_PixelInputDeclarations
    );

    $.Method({Static:false, Public:false}, "PSBody", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_PSBody
    );

    $.Method({Static:false, Public:false}, "SpecularInputDeclaration", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_SpecularInputDeclaration
    );

    $.Method({Static:false, Public:false}, "VSBody", 
      JSIL.MethodSignature.Action($asm09.TypeRef("System.Text.StringBuilder")), 
      ShaderCodeBuilder_VSBody
    );

    $.Field({Static:false, Public:false}, "_hasVertices", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasNormals", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasUVs", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasColors", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasDiffuse", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasSpecular", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasEmissive", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasBump", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasDiffuseTexture", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasSpecularTexture", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasEmissiveTexture", $.Boolean);

    $.Field({Static:false, Public:false}, "_hasWeightMap", $.Boolean);

    $.Field({Static:false, Public:false}, "_nBones", $.Int32);

    $.Field({Static:false, Public:false}, "_normalizeNormals", $.Boolean);

    $.Field({Static:false, Public:false}, "_vs", $.String);

    $.Field({Static:false, Public:false}, "_ps", $.String);

    $.Property({Static:false, Public:true }, "VS", $.String);

    $.Property({Static:false, Public:true }, "PS", $.String);

    $.Property({Static:false, Public:true }, "DiffuseColorName", $.String);

    $.Property({Static:false, Public:true }, "SpecularColorName", $.String);

    $.Property({Static:false, Public:true }, "EmissiveColorName", $.String);

    $.Property({Static:false, Public:true }, "DiffuseTextureName", $.String);

    $.Property({Static:false, Public:true }, "SpecularTextureName", $.String);

    $.Property({Static:false, Public:true }, "EmissiveTextureName", $.String);

    $.Property({Static:false, Public:true }, "BumpTextureName", $.String);

    $.Property({Static:false, Public:true }, "DiffuseMixName", $.String);

    $.Property({Static:false, Public:true }, "SpecularMixName", $.String);

    $.Property({Static:false, Public:true }, "EmissiveMixName", $.String);

    $.Property({Static:false, Public:true }, "SpecularShininessName", $.String);

    $.Property({Static:false, Public:true }, "SpecularIntensityName", $.String);

    $.Property({Static:false, Public:true }, "BumpIntensityName", $.String);

    $.Property({Static:true , Public:true }, "LightDirectionName", $.String);

    $.Property({Static:true , Public:true }, "LightColorName", $.String);

    $.Property({Static:true , Public:true }, "LightIntensityName", $.String);


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.ViseratorExtensions */ 

(function ViseratorExtensions$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.Fusee.Serialization.SceneNodeContainer)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneVisitorHelpers)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm09.System.Collections.Generic.IEnumerable$b1.Of($asm06.Fusee.Serialization.SceneNodeContainer).GetEnumerator)) ();
  };


  function ViseratorExtensions_Viserate$b2$00 (TViserator, TResult, root) {
    var viseratorEnumerable = new ($asm03.Fusee.Engine.SimpleScene.ViseratorExtensions_ViseratorEnumerable$b2.Of(TViserator, TResult)) ();
    viseratorEnumerable._rootList = $T02().SingleRootEnum(root);
    return viseratorEnumerable;
  }; 

  function ViseratorExtensions_Viserate$b2$01 (TViserator, TResult, rootList) {
    var viseratorEnumerable = new ($asm03.Fusee.Engine.SimpleScene.ViseratorExtensions_ViseratorEnumerable$b2.Of(TViserator, TResult)) ();
    viseratorEnumerable._rootList = $IM00().Call(rootList, null);
    return viseratorEnumerable;
  }; 

  JSIL.MakeStaticClass("Fusee.Engine.SimpleScene.ViseratorExtensions", true, [], function ($ib) {
    $ = $ib;

    $.Method({Static:true , Public:true }, "Viserate", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!1"]), [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")], ["TViserator", "TResult"]), 
      ViseratorExtensions_Viserate$b2$00
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Method({Static:true , Public:true }, "Viserate", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!1"]), [$asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")])], ["TViserator", "TResult"]), 
      ViseratorExtensions_Viserate$b2$01
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class Fusee.Engine.SimpleScene.ViseratorExtensions+ViseratorEnumerable`2 */ 

(function ViseratorEnumerable$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Activator)) ();
  };


  function ViseratorEnumerable$b2__ctor () {
  }; 

  function ViseratorEnumerable$b2_GetEnumerator () {
    var tViserator = $T00().CreateInstance$b1($thisType.TViserator.get(this))();
    ($asm03.Fusee.Engine.SimpleScene.ViseratorBase$b1.Of($thisType.TResult.get(this)).$Cast(tViserator)).Init(this._rootList);
    return $asm09.System.Collections.Generic.IEnumerator$b1.Of($thisType.TResult.get(this)).$Cast(tViserator);
  }; 

  function ViseratorEnumerable$b2_System_Collections_IEnumerable_GetEnumerator () {
    return this.GetEnumerator();
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.ViseratorExtensions+ViseratorEnumerable`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TViserator", "TResult"], 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ViseratorEnumerable$b2__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("TResult")]), null), 
      ViseratorEnumerable$b2_GetEnumerator
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm09.TypeRef("System.Collections.IEnumerator")), 
      ViseratorEnumerable$b2_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm09.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "_rootList", $asm09.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("Fusee.Serialization.SceneNodeContainer")]));

    $.ImplementInterfaces(
      /* 0 */ $asm09.TypeRef("System.Collections.Generic.IEnumerable`1", [$.GenericParameter("TResult")]), 
      /* 1 */ $asm09.TypeRef("System.Collections.IEnumerable")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface Fusee.Engine.SimpleScene.IStateStack */ 

JSIL.MakeInterface(
  "Fusee.Engine.SimpleScene.IStateStack", true, [], function ($) {
    $.Method({}, "Push", JSIL.MethodSignature.Void);
    $.Method({}, "Pop", JSIL.MethodSignature.Void);
    $.Method({}, "Clear", JSIL.MethodSignature.Void);
    $.Method({}, "get_Depth", JSIL.MethodSignature.Return($.Int32));
    $.Property({}, "Depth");
  }, []);

/* class Fusee.Engine.SimpleScene.StateStack`1 */ 

(function StateStack$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm09.System.Array)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm09.TypeRef("System.Array"), $asm09.TypeRef("System.Int32"), 
        $asm09.TypeRef("System.Array"), $asm09.TypeRef("System.Int32"), 
        $asm09.TypeRef("System.Int32")
      ]))) ();
  };


  function StateStack$b1__ctor (capacity) {
    this._array = JSIL.Array.New($thisType.T.get(this), capacity);
    this._top = 0;
  }; 

  function StateStack$b1_Clear () {
    JSIL.Array.Erase(this._array, $thisType.T.get(this), 0, (((this._top | 0) + 1) | 0));
    this._top = 0;
  }; 

  function StateStack$b1_get_Depth () {
    return (((this._top | 0) + 1) | 0);
  }; 

  function StateStack$b1_get_Tos () {
    return this._array[this._top];
  }; 

  function StateStack$b1_Pop () {
    var arg_21_0 = this._array;
    var top = (this._top | 0);
    this._top = ((top - 1) | 0);
    arg_21_0[top] = (
      $thisType.T.get(this).IsValueType
         ? JSIL.CreateInstanceOfType($thisType.T.get(this))
         : null)
    ;
  }; 

  function StateStack$b1_Push () {
    var num = (((this._top | 0) + 1) | 0);
    var flag = num === (this._array.length | 0);
    if (flag) {
      var array = JSIL.Array.New($thisType.T.get(this), Math.imul(2, this._array.length));
      $S00().CallStatic($T01(), "Copy", null, 
        this._array, 
        0, 
        array, 
        0, 
        num
      );
      this._array = array;
    }
    this._array[num] = JSIL.CloneParameter($thisType.T.get(this), this._array[this._top]);
    var top = (this._top | 0);
    this._top = ((top + 1) | 0);
  }; 

  function StateStack$b1_set_Tos (value) {
    this._array[this._top] = JSIL.CloneParameter($thisType.T.get(this), value);
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.StateStack`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      StateStack$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void, 
      StateStack$b1_Clear
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32), 
      StateStack$b1_get_Depth
    );

    $.Method({Static:false, Public:true }, "get_Tos", 
      new JSIL.MethodSignature($.GenericParameter("T"), null), 
      StateStack$b1_get_Tos
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Pop", 
      JSIL.MethodSignature.Void, 
      StateStack$b1_Pop
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Push", 
      JSIL.MethodSignature.Void, 
      StateStack$b1_Push
    );

    $.Method({Static:false, Public:true }, "set_Tos", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")]), 
      StateStack$b1_set_Tos
    );

    $.Field({Static:false, Public:false}, "_array", $jsilcore.TypeRef("System.Array", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false}, "_top", $.Int32);

    $.Constant({Static:true , Public:false}, "_defaultCapacity", $.Int32, 8);

    $.Property({Static:false, Public:true }, "Tos", $.GenericParameter("T"));

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.CollapsingStateStack`1 */ 

(function CollapsingStateStack$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.StateStack$b1.Of($asm09.System.Int32))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm09.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm09.System.InvalidOperationException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm09.TypeRef("System.InvalidOperationException"), [$asm09.TypeRef("System.String")]))) ();
  };


  function CollapsingStateStack$b1__ctor (capacity) {
    this._impStack = new ($asm03.Fusee.Engine.SimpleScene.StateStack$b1.Of($thisType.T.get(this))) (capacity);
    this._countStack = new ($T01())(capacity);
  }; 

  function CollapsingStateStack$b1_Clear () {
    (this._impStack).Clear();
    (this._countStack).Clear();
    $thisType.Of($thisType.T.get(this)).prototype.set_Depth.call(this, 0);
  }; 

  function CollapsingStateStack$b1_get_Depth () {
    return this.CollapsingStateStack$b1$Depth$value;
  }; 

  function CollapsingStateStack$b1_get_Tos () {
    return (this._impStack).get_Tos();
  }; 

  function CollapsingStateStack$b1_Pop () {
    var flag = (this.get_Depth() | 0) <= 0;
    if (flag) {
      throw $S00().Construct("CollapsingState Stack depth is already 0. Cannot Pop stack.");
    }
    var num = (this.get_Depth() | 0);
    $thisType.Of($thisType.T.get(this)).prototype.set_Depth.call(this, ((num - 1) | 0));
    var flag2 = ((this._countStack).get_Tos() | 0) > 1;
    if (flag2) {
      var countStack = this._countStack;
      num = (countStack.get_Tos() | 0);
      countStack.set_Tos(((num - 1) | 0));
    } else {
      (this._countStack).Pop();
      (this._impStack).Pop();
    }
  }; 

  function CollapsingStateStack$b1_Push () {
    var num = (this.get_Depth() | 0);
    $thisType.Of($thisType.T.get(this)).prototype.set_Depth.call(this, ((num + 1) | 0));
    var countStack = this._countStack;
    num = (countStack.get_Tos() | 0);
    countStack.set_Tos(((num + 1) | 0));
  }; 

  function CollapsingStateStack$b1_set_Depth (value) {
    this.CollapsingStateStack$b1$Depth$value = (value | 0);
  }; 

  function CollapsingStateStack$b1_set_Tos (value) {
    var flag = ((this._countStack).get_Tos() | 0) > 0;
    if (flag) {
      var tos = ((this._countStack).get_Tos() | 0);
      (this._countStack).set_Tos(((tos - 1) | 0));
      (this._impStack).Push();
      (this._countStack).Push();
      (this._countStack).set_Tos(0);
    }
    (this._impStack).set_Tos(JSIL.CloneParameter($thisType.T.get(this), value));
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.CollapsingStateStack`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      CollapsingStateStack$b1__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void, 
      CollapsingStateStack$b1_Clear
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32), 
      CollapsingStateStack$b1_get_Depth
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Tos", 
      new JSIL.MethodSignature($.GenericParameter("T"), null), 
      CollapsingStateStack$b1_get_Tos
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Pop", 
      JSIL.MethodSignature.Void, 
      CollapsingStateStack$b1_Pop
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Push", 
      JSIL.MethodSignature.Void, 
      CollapsingStateStack$b1_Push
    );

    $.Method({Static:false, Public:false}, "set_Depth", 
      JSIL.MethodSignature.Action($.Int32), 
      CollapsingStateStack$b1_set_Depth
    )
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Tos", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")]), 
      CollapsingStateStack$b1_set_Tos
    );

    $.Constant({Static:true , Public:false}, "_defaultCapacity", $.Int32, 4);

    $.Field({Static:false, Public:false, ReadOnly:true }, "_impStack", $asm03.TypeRef("Fusee.Engine.SimpleScene.StateStack`1", [$.GenericParameter("T")]));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_countStack", $asm03.TypeRef("Fusee.Engine.SimpleScene.StateStack`1", [$.Int32]));

    $.Field({Static:false, Public:false}, "CollapsingStateStack$b1$Depth$value", $.Int32)
      .Attribute($asm09.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm09.TypeRef("System.Diagnostics.DebuggerBrowsableAttribute"), function () { return [$asm09.System.Diagnostics.DebuggerBrowsableState.Never]; });

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.Property({Static:false, Public:true }, "Tos", $.GenericParameter("T"));

    $.ImplementInterfaces(
      /* 0 */ $asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.EmptyState */ 

(function EmptyState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm09.System.Int32)) ();
  };


  function EmptyState__ctor () {
  }; 

  function EmptyState_Clear () {
    this._depth = 0;
  }; 

  function EmptyState_get_Depth () {
    return this._depth;
  }; 

  function EmptyState_Pop () {
    var depth = (this._depth | 0);
    this._depth = ((depth - 1) | 0);
  }; 

  function EmptyState_Push () {
    var depth = (this._depth | 0);
    this._depth = ((depth + 1) | 0);
  }; 

  JSIL.MakeType({
      BaseType: $asm09.TypeRef("System.Object"), 
      Name: "Fusee.Engine.SimpleScene.EmptyState", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      EmptyState__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void, 
      EmptyState_Clear
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Depth", 
      JSIL.MethodSignature.Return($.Int32), 
      EmptyState_get_Depth
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Pop", 
      JSIL.MethodSignature.Void, 
      EmptyState_Pop
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Push", 
      JSIL.MethodSignature.Void, 
      EmptyState_Push
    );

    $.Field({Static:false, Public:false}, "_depth", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "Depth", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm03.TypeRef("Fusee.Engine.SimpleScene.IStateStack")
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Fusee.Engine.SimpleScene.StandardState */ 

(function StandardState$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.CollapsingStateStack$b1.Of($asm05.Fusee.Math.float4x4))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.VisitorState)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm05.Fusee.Math.float4x4)) ();
  };


  function StandardState__ctor () {
    this._model = new ($T00())(4);
    this._view = new ($T00())(4);
    this._projection = new ($T00())(4);
    $T01().prototype._ctor.call(this);
    this.RegisterState(this._model);
    this.RegisterState(this._view);
    this.RegisterState(this._projection);
  }; 

  function StandardState_get_Model () {
    return (this._model).get_Tos();
  }; 

  function StandardState_get_Projection () {
    return (this._projection).get_Tos();
  }; 

  function StandardState_get_View () {
    return (this._view).get_Tos();
  }; 

  function StandardState_set_Model (value) {
    (this._model).set_Tos(value.MemberwiseClone());
  }; 

  function StandardState_set_Projection (value) {
    (this._projection).set_Tos(value.MemberwiseClone());
  }; 

  function StandardState_set_View (value) {
    (this._view).set_Tos(value.MemberwiseClone());
  }; 

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Fusee.Engine.SimpleScene.VisitorState"), 
      Name: "Fusee.Engine.SimpleScene.StandardState", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      StandardState__ctor
    );

    $.Method({Static:false, Public:true }, "get_Model", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      StandardState_get_Model
    );

    $.Method({Static:false, Public:true }, "get_Projection", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      StandardState_get_Projection
    );

    $.Method({Static:false, Public:true }, "get_View", 
      JSIL.MethodSignature.Return($asm05.TypeRef("Fusee.Math.float4x4")), 
      StandardState_get_View
    );

    $.Method({Static:false, Public:true }, "set_Model", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      StandardState_set_Model
    );

    $.Method({Static:false, Public:true }, "set_Projection", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      StandardState_set_Projection
    );

    $.Method({Static:false, Public:true }, "set_View", 
      JSIL.MethodSignature.Action($asm05.TypeRef("Fusee.Math.float4x4")), 
      StandardState_set_View
    );

    $.Field({Static:false, Public:false}, "_model", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Field({Static:false, Public:false}, "_view", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Field({Static:false, Public:false}, "_projection", $asm03.TypeRef("Fusee.Engine.SimpleScene.CollapsingStateStack`1", [$asm05.TypeRef("Fusee.Math.float4x4")]));

    $.Property({Static:false, Public:true }, "Model", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.Property({Static:false, Public:true }, "View", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.Property({Static:false, Public:true }, "Projection", $asm05.TypeRef("Fusee.Math.float4x4"));

    $.ImplementInterfaces(
    );


    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

