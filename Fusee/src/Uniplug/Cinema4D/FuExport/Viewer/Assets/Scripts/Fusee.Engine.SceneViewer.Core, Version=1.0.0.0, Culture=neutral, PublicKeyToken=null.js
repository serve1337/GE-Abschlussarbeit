/* Generated by JSIL v0.8.2 build 17617. See http://jsil.org/ for more information. */ 
'use strict';
var $asm06 = JSIL.DeclareAssembly("Fusee.Engine.SceneViewer.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("Fusee");
JSIL.DeclareNamespace("Fusee.Engine");
JSIL.DeclareNamespace("Fusee.Engine.SceneViewer");
JSIL.DeclareNamespace("Fusee.Engine.SceneViewer.Core");
/* class Fusee.Engine.SceneViewer.Core.SceneViewer */ 

(function SceneViewer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButton)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButtonEventArgs)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm08.Fusee.Math.Core.float4)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm03.Fusee.Engine.Common.CursorType)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm03.Fusee.Engine.Common.IInputDeviceImp)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm14.System.NotImplementedException)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIHandler)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIButtonHandler)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIImage)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Fusee.Base.Common.ImageData)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.Fusee.Base.Core.AssetStorage)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm01.Fusee.Base.Core.Font)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm04.Fusee.Engine.Core.FontMap)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIText)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm04.Fusee.Engine.Core.GUI.GUIElement)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm08.Fusee.Math.Core.float2)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm04.Fusee.Engine.Core.RenderContext)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm09.Fusee.Serialization.SceneContainer)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm04.Fusee.Engine.Core.AABBCalculator)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm14.System.Boolean)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm08.Fusee.Math.Core.float3)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm08.Fusee.Math.Core.AABBf)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm14.System.Math)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm14.System.Single)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm08.Fusee.Math.Core.float4x4)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm04.Fusee.Engine.Core.SceneRenderer)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm14.System.String)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm03.Fusee.Engine.Common.ClearFlags)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm04.Fusee.Engine.Core.KeyboardDevice)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm04.Fusee.Engine.Core.Input)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm04.Fusee.Engine.Core.Time)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm04.Fusee.Engine.Core.TouchDevice)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm04.Fusee.Engine.Core.MouseDevice)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm03.Fusee.Engine.Common.TouchPoints)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm08.Fusee.Math.Core.M)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm08.TypeRef("Fusee.Math.Core.float4"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm14.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), [
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(JSIL.MethodSignature.Action($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIElement")))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIImage"), [
        $asm00.TypeRef("Fusee.Base.Common.ImageData"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"), [
        $asm14.TypeRef("System.String"), $asm04.TypeRef("Fusee.Engine.Core.FontMap"), 
        $asm14.TypeRef("System.Int32"), $asm14.TypeRef("System.Int32")
      ]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Engine.Core.AABBCalculator"), [$asm09.TypeRef("Fusee.Serialization.SceneContainer")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float2"), [$asm08.TypeRef("Fusee.Math.Core.float2"), $asm14.TypeRef("System.Single")]))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [$asm14.TypeRef("System.Single")]))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(new JSIL.MethodSignature($asm14.TypeRef("System.Single"), [
        $asm14.TypeRef("System.Single"), $asm14.TypeRef("System.Single"), 
        $asm14.TypeRef("System.Single")
      ]))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(new JSIL.MethodSignature($asm08.TypeRef("Fusee.Math.Core.float4x4"), [$asm08.TypeRef("Fusee.Math.Core.float4x4"), $asm08.TypeRef("Fusee.Math.Core.float4x4")]))) ();
  };


  function SceneViewer__ctor () {
    $T00().prototype._ctor.call(this);
  }; 

  function SceneViewer__guiFuseeLink_OnGUIButtonDown (sender, mea) {
    this.OpenLink("http://fusee3d.org");
  }; 

  function SceneViewer__guiFuseeLink_OnGUIButtonEnter (sender, mea) {
    (this._guiFuseeLink.ButtonColor = $S00().Construct(0, 0.6, 0.2, 0.4));
    (this._guiFuseeLink).set_BorderWidth(1);
    this.SetCursor($T04().Hand);
  }; 

  function SceneViewer__guiFuseeLink_OnGUIButtonLeave (sender, mea) {
    (this._guiFuseeLink.ButtonColor = $S00().Construct(0, 0, 0, 0));
    (this._guiFuseeLink).set_BorderWidth(0);
    this.SetCursor($T04().Standard);
  }; 

  function SceneViewer_Creator (device) {
    throw $S01().Construct();
  }; 

  function SceneViewer_Init () {
    this._guiHandler = $S02().Construct();
    (this._guiHandler).AttachToContext(this.RenderCanvas$RC$value);
    this._guiFuseeLink = $S03().Construct(6, 6, 157, 87);
    (this._guiFuseeLink.ButtonColor = $S00().Construct(0, 0, 0, 0));
    (this._guiFuseeLink.BorderColor = $S00().Construct(0, 0.6, 0.2, 1));
    (this._guiFuseeLink).set_BorderWidth(0);
    (this._guiFuseeLink).add_OnGUIButtonDown($T08().New(this, null, new JSIL.MethodPointerInfo($thisType, "_guiFuseeLink_OnGUIButtonDown", $S04(), false, false)));
    (this._guiFuseeLink).add_OnGUIButtonEnter($T08().New(this, null, new JSIL.MethodPointerInfo($thisType, "_guiFuseeLink_OnGUIButtonEnter", $S05(), false, false)));
    (this._guiFuseeLink).add_OnGUIButtonLeave($T08().New(this, null, new JSIL.MethodPointerInfo($thisType, "_guiFuseeLink_OnGUIButtonLeave", $S06(), false, false)));
    $S07().CallVirtual("Add", null, this._guiHandler, this._guiFuseeLink);
    this._guiFuseeLogo = $S08().Construct($T0B().Get$b1($T0A())("FuseeLogo150.png").MemberwiseClone(), 10, 10, -5, 150, 80);
    $S07().CallVirtual("Add", null, this._guiHandler, this._guiFuseeLogo);
    var fontLato = $T0B().Get$b1($T0C())("Lato-Black.ttf");
    fontLato.set_UseKerning(true);
    this._guiLatoBlack = new ($T0D())(fontLato, 18, null);
    this._guiSubText = $S09().Construct("Simple FUSEE Example", this._guiLatoBlack, 100, 100);
    (this._guiSubText.TextColor = $S00().Construct(0.05, 0.25, 0.15, 0.8));
    $S07().CallVirtual("Add", null, this._guiHandler, this._guiSubText);
    this._subtextWidth = +$T0E().GetTextWidth((this._guiSubText).get_Text(), this._guiLatoBlack);
    this._subtextHeight = +$T0E().GetTextHeight((this._guiSubText).get_Text(), this._guiLatoBlack);
    $thisType._zoom = 400;
    $thisType._angleRoll = 0;
    $thisType._angleRollInit = 0;
    this._twoTouchRepeated = false;
    $thisType._offset = $T10().Zero.MemberwiseClone();
    $thisType._offsetInit = $T10().Zero.MemberwiseClone();
    (this.RenderCanvas$RC$value.ClearColor = $S00().Construct(1, 1, 1, 1));
    this._scene = $T0B().Get$b1($T12())("Model.fus");
    var aabbc = $S0A().Construct(this._scene);
    var bbox = aabbc.GetBox();
    var hasValue = bbox !== null;
    if (hasValue) {
      var bbCenter = (JSIL.Nullable_Value(bbox)).get_Center().MemberwiseClone();
      var bbSize = (JSIL.Nullable_Value(bbox)).get_Size();
      var center = $T15().Zero.MemberwiseClone();
      var flag = Math.abs(bbCenter.x) > (bbSize.x * 0.3);
      if (flag) {
        center.x = +bbCenter.x;
      }
      var flag2 = Math.abs(bbCenter.y) > (bbSize.y * 0.3);
      if (flag2) {
        center.y = +bbCenter.y;
      }
      var flag3 = Math.abs(bbCenter.z) > (bbSize.z * 0.3);
      if (flag3) {
        center.z = +bbCenter.z;
      }
      this._sceneCenter = $T19().CreateTranslation($T15().op_UnaryNegation(center.MemberwiseClone()).MemberwiseClone()).MemberwiseClone();
      var maxScale = +$T17().Max(bbSize.x, $T17().Max(bbSize.y, bbSize.z));
      if (maxScale !== 0) {
        this._sceneScale = $S0B().CallStatic($T19(), "CreateScale", null, +((200 / maxScale))).MemberwiseClone();
      } else {
        this._sceneScale = $T19().Identity.MemberwiseClone();
      }
    }
    this._sceneRenderer = new ($T1A())(this._scene);
    (this._guiSubText).set_Text("FUSEE 3D Scene");
    if ((this._scene.Header.CreatedBy !== null) || (this._scene.Header.CreationDate !== null)) {
      var expr_3DC = this._guiSubText;
      expr_3DC.set_Text(JSIL.ConcatString(expr_3DC.get_Text(), " created"));
      if (this._scene.Header.CreatedBy !== null) {
        var expr_411 = this._guiSubText;
        expr_411.set_Text((expr_411.get_Text() + " by " + this._scene.Header.CreatedBy));
      }
      if (this._scene.Header.CreationDate !== null) {
        var expr_456 = this._guiSubText;
        expr_456.set_Text((expr_456.get_Text() + " on " + this._scene.Header.CreationDate));
      }
    }
    this._subtextWidth = +$T0E().GetTextWidth((this._guiSubText).get_Text(), this._guiLatoBlack);
    this._subtextHeight = +$T0E().GetTextHeight((this._guiSubText).get_Text(), this._guiLatoBlack);
  }; 

  function SceneViewer_RenderAFrame () {
    (this.RenderCanvas$RC$value).Clear($T1C().$Flags("Color", "Depth"));
    var flag = (+$T1E().get_Keyboard().get_LeftRightAxis() !== 0) || 
    (+$T1E().get_Keyboard().get_UpDownAxis() !== 0);
    if (flag) {
      this._keys = true;
    }
    var curDamp = Math.fround($T17().Exp(-0.8 * +$T1F().get_DeltaTime()));
    var twoPoint = $T1E().get_Touch().get_TwoPoint();
    if (twoPoint) {
      if (!this._twoTouchRepeated) {
        this._twoTouchRepeated = true;
        $thisType._angleRollInit = +$T1E().get_Touch().get_TwoPointAngle() - +$thisType._angleRoll;
        $thisType._offsetInit = $T10().op_Subtraction($T1E().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offset);
        this._maxPinchSpeed = 0;
      }
      $thisType._zoomVel = +$T1E().get_Touch().get_TwoPointDistanceVel() * -0.01;
      $thisType._angleRoll = +$T1E().get_Touch().get_TwoPointAngle() - +$thisType._angleRollInit;
      $thisType._offset = $T10().op_Subtraction($T1E().get_Touch().get_TwoPointMidPoint().MemberwiseClone(), $thisType._offsetInit);
      var pinchSpeed = +$T1E().get_Touch().get_TwoPointDistanceVel();
      var flag3 = pinchSpeed > +this._maxPinchSpeed;
      if (flag3) {
        this._maxPinchSpeed = pinchSpeed;
      }
    } else {
      this._twoTouchRepeated = false;
      $thisType._zoomVel = +$T1E().get_Mouse().get_WheelVel() * -0.5;
      $thisType._angleRoll = +$thisType._angleRoll * (curDamp * 0.8);
      $thisType._offset = $S0C().CallStatic($T10(), "op_Multiply", null, $thisType._offset.MemberwiseClone(), curDamp * 0.8);
    }
    var leftButton = $T1E().get_Mouse().get_LeftButton();
    if (leftButton) {
      this._keys = false;
      $thisType._angleVelHorz = (-7 * +$T1E().get_Mouse().get_XVel()) * 2E-06;
      $thisType._angleVelVert = (-7 * +$T1E().get_Mouse().get_YVel()) * 2E-06;
    } else {
      var flag4 = $T1E().get_Touch().GetTouchActive($T22().Touchpoint_0) && 
      !$T1E().get_Touch().get_TwoPoint();
      if (flag4) {
        this._keys = false;
        var touchVel = $T1E().get_Touch().GetVelocity($T22().Touchpoint_0);
        $thisType._angleVelHorz = (-7 * +touchVel.x) * 2E-06;
        $thisType._angleVelVert = (-7 * +touchVel.y) * 2E-06;
      } else {
        var keys = this._keys;
        if (keys) {
          $thisType._angleVelHorz = (-7 * +$T1E().get_Keyboard().get_LeftRightAxis()) * 0.002;
          $thisType._angleVelVert = (-7 * +$T1E().get_Keyboard().get_UpDownAxis()) * 0.002;
        } else {
          $thisType._angleVelHorz = +$thisType._angleVelHorz * curDamp;
          $thisType._angleVelVert = +$thisType._angleVelVert * curDamp;
        }
      }
    }
    $thisType._zoom = +$thisType._zoom + +$thisType._zoomVel;
    if (+$thisType._zoom < 80) {
      $thisType._zoom = 80;
    }
    if (+$thisType._zoom > 2000) {
      $thisType._zoom = 2000;
    }
    $thisType._angleHorz = +$thisType._angleHorz + +$thisType._angleVelHorz;
    $thisType._angleHorz = +$S0D().CallStatic($T23(), "MinAngle", null, $thisType._angleHorz);
    $thisType._angleVert = +$thisType._angleVert + +$thisType._angleVelVert;
    $thisType._angleVert = +$S0E().CallStatic($T23(), "Clamp", null, $thisType._angleVert, -1.57079637, 1.57079637);
    $thisType._angleRoll = +$S0D().CallStatic($T23(), "MinAngle", null, $thisType._angleRoll);
    var mtxRot = $S0F().CallStatic($T19(), "op_Multiply", null, 
      $S0F().CallStatic($T19(), "op_Multiply", null, 
        $T19().CreateRotationZ($thisType._angleRoll).MemberwiseClone(), 
        $T19().CreateRotationX($thisType._angleVert).MemberwiseClone()
      ).MemberwiseClone(), 
      $T19().CreateRotationY($thisType._angleHorz).MemberwiseClone()
    ).MemberwiseClone();
    var mtxCam = $T19().LookAt(
      0, 
      20, 
      -$thisType._zoom, 
      0, 
      0, 
      0, 
      0, 
      1, 
      0
    );
    (this.RenderCanvas$RC$value.ModelView = $S0F().CallStatic($T19(), "op_Multiply", null, $S0F().CallStatic($T19(), "op_Multiply", null, $S0F().CallStatic($T19(), "op_Multiply", null, mtxCam.MemberwiseClone(), mtxRot.MemberwiseClone()).MemberwiseClone(), this._sceneScale.MemberwiseClone()).MemberwiseClone(), this._sceneCenter.MemberwiseClone()).MemberwiseClone());
    var mtxOffset = $T19().CreateTranslation(
      +(((2 * +$thisType._offset.x) / +(this.get_Width()))), 
      +(((-2 * +$thisType._offset.y) / +(this.get_Height()))), 
      0
    ).MemberwiseClone();
    (this.RenderCanvas$RC$value.Projection = $S0F().CallStatic($T19(), "op_Multiply", null, mtxOffset.MemberwiseClone(), this._projection.MemberwiseClone()).MemberwiseClone());
    (this._sceneRenderer).Animate();
    (this._sceneRenderer).Render(this.RenderCanvas$RC$value);
    (this._guiHandler).RenderGUI();
    this.Present();
  }; 

  function SceneViewer_Resize () {
    (this.RenderCanvas$RC$value).Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspectRatio = +((+(this.get_Width()) / +(this.get_Height())));
    this._projection = $T19().CreatePerspectiveFieldOfView(0.7853982, aspectRatio, 1, 20000).MemberwiseClone();
    (this._guiSubText).set_PosX(((+((+(this.get_Width()) - +this._subtextWidth) / 2)) | 0));
    (this._guiSubText).set_PosY((((+(this.get_Height()) - +this._subtextHeight) - 3) | 0));
    (this._guiHandler).Refresh();
  }; 

  JSIL.MakeType({
      BaseType: $asm04.TypeRef("Fusee.Engine.Core.RenderCanvas"), 
      Name: "Fusee.Engine.SceneViewer.Core.SceneViewer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($ib) {
    $ = $ib;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SceneViewer__ctor
    );

    $.Method({Static:false, Public:false}, "_guiFuseeLink_OnGUIButtonDown", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      SceneViewer__guiFuseeLink_OnGUIButtonDown
    );

    $.Method({Static:false, Public:false}, "_guiFuseeLink_OnGUIButtonEnter", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      SceneViewer__guiFuseeLink_OnGUIButtonEnter
    );

    $.Method({Static:false, Public:false}, "_guiFuseeLink_OnGUIButtonLeave", 
      new JSIL.MethodSignature(null, [$asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"), $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButtonEventArgs")]), 
      SceneViewer__guiFuseeLink_OnGUIButtonLeave
    );

    $.Method({Static:false, Public:false}, "Creator", 
      new JSIL.MethodSignature($asm04.TypeRef("Fusee.Engine.Core.InputDevice"), [$asm03.TypeRef("Fusee.Engine.Common.IInputDeviceImp")]), 
      SceneViewer_Creator
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      JSIL.MethodSignature.Void, 
      SceneViewer_Init
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      JSIL.MethodSignature.Void, 
      SceneViewer_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      JSIL.MethodSignature.Void, 
      SceneViewer_Resize
    );

    $.Field({Static:true , Public:false}, "_angleHorz", $.Single, 1.04719758);

    $.Field({Static:true , Public:false}, "_angleVert", $.Single, -0.2617994);

    $.Field({Static:true , Public:false}, "_angleVelHorz", $.Single);

    $.Field({Static:true , Public:false}, "_angleVelVert", $.Single);

    $.Field({Static:true , Public:false}, "_angleRoll", $.Single);

    $.Field({Static:true , Public:false}, "_angleRollInit", $.Single);

    $.Field({Static:true , Public:false}, "_zoomVel", $.Single);

    $.Field({Static:true , Public:false}, "_zoom", $.Single);

    $.Field({Static:true , Public:false}, "_offset", $asm08.TypeRef("Fusee.Math.Core.float2"));

    $.Field({Static:true , Public:false}, "_offsetInit", $asm08.TypeRef("Fusee.Math.Core.float2"));

    $.Constant({Static:true , Public:false}, "RotationSpeed", $.Single, 7);

    $.Constant({Static:true , Public:false}, "Damping", $.Single, 0.8);

    $.Field({Static:false, Public:false}, "_scene", $asm09.TypeRef("Fusee.Serialization.SceneContainer"));

    $.Field({Static:false, Public:false}, "_sceneRenderer", $asm04.TypeRef("Fusee.Engine.Core.SceneRenderer"));

    $.Field({Static:false, Public:false}, "_sceneCenter", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_sceneScale", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_projection", $asm08.TypeRef("Fusee.Math.Core.float4x4"));

    $.Field({Static:false, Public:false}, "_twoTouchRepeated", $.Boolean);

    $.Field({Static:false, Public:false}, "_keys", $.Boolean);

    $.Field({Static:false, Public:false}, "_guiHandler", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIHandler"));

    $.Field({Static:false, Public:false}, "_guiFuseeLink", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIButton"));

    $.Field({Static:false, Public:false}, "_guiFuseeLogo", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIImage"));

    $.Field({Static:false, Public:false}, "_guiLatoBlack", $asm04.TypeRef("Fusee.Engine.Core.FontMap"));

    $.Field({Static:false, Public:false}, "_guiSubText", $asm04.TypeRef("Fusee.Engine.Core.GUI.GUIText"));

    $.Field({Static:false, Public:false}, "_subtextHeight", $.Single);

    $.Field({Static:false, Public:false}, "_subtextWidth", $.Single);

    $.Field({Static:false, Public:false}, "_maxPinchSpeed", $.Single);


    function SceneViewer__cctor () {
      $thisType._offset = new $asm08.Fusee.Math.Core.float2();
      $thisType._offsetInit = new $asm08.Fusee.Math.Core.float2();
      $thisType._angleHorz = 1.04719758;
      $thisType._angleVert = -0.2617994;
    }; 

    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SceneViewer__cctor
    );


    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("Fusee.Engine.Common.FuseeApplicationAttribute"));

})();

